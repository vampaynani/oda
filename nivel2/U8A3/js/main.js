// Generated by CoffeeScript 1.6.3
(function() {
  var U4A6,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  U4A6 = (function(_super) {
    __extends(U4A6, _super);

    function U4A6() {
      this.repeatSound = __bind(this.repeatSound, this);
      this.nextEvaluation = __bind(this.nextEvaluation, this);
      this.finishEvaluation = __bind(this.finishEvaluation, this);
      this.evaluateAnswer = __bind(this.evaluateAnswer, this);
      this.initEvaluation = __bind(this.initEvaluation, this);
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca.png'
        }, {
          id: 'inst',
          src: 'texto_look.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'repeatbtn',
          src: 'repeat-btn.png'
        }, {
          id: 'playagain',
          src: 'play_again.png'
        }, {
          id: 'startgame',
          src: 'start_game.png'
        }, {
          id: 'pas1',
          src: 'pas1.png'
        }, {
          id: 'pas2',
          src: 'pas2.png'
        }, {
          id: 'pas3',
          src: 'pas3.png'
        }, {
          id: 'pas4',
          src: 'pas4.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/boing.mp3',
          id: 'boing'
        }, {
          src: 'sounds/TU2_U4_A6_instructions.mp3',
          id: 'instructions'
        }
      ];
      this.textos = {
        pasaporte1: ['Eric Schmidt', 'Germany', 'blue', 'brown', '1 m 10 cm'],
        nino1: {
          linea1: ['I have', 'blue', 'eyes. I have straight', 'brown', "hair. I'm", '1 m 10 cm', 'tall.'],
          linea2: ["My name's", 'Eric Schmidt', "I'm from Germany."]
        },
        pasaporte2: ['Melanie Murphy', 'Ireland', 'green', 'red', '1 m 7 cm'],
        pasaporte3: ['Cassandra Wang', 'China', 'dark brown', 'black', '1 m 15 cm'],
        pasaporte4: ['Saul Peterson', 'Canada', 'light brown', 'blonde', '1 m 14 cm'],
        positions: [
          {
            x: '65',
            y: '22'
          }, {
            x: '77',
            y: '50'
          }, {
            x: '84',
            y: '78'
          }, {
            x: '90',
            y: '106'
          }, {
            x: '68',
            y: '134'
          }
        ]
      };
      U4A6.__super__.constructor.call(this, null, manifest, sounds);
    }

    U4A6.prototype.setStage = function() {
      U4A6.__super__.setStage.apply(this, arguments);
      this.insertBitmap('header', 'head', stageSize.w / 2, 0, 'tc');
      this.insertBitmap('instructions', 'inst', 20, 100);
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, 5, 0));
      return this.setPassports().setTexto().introEvaluation();
    };

    U4A6.prototype.setPassports = function() {
      var fondo1, fondo2, fondo3, fondo4, i, p1, p2, p3, p4, t, _i, _j, _k, _l;
      p1 = new createjs.Container();
      p2 = new createjs.Container();
      p3 = new createjs.Container();
      p4 = new createjs.Container();
      p1.x = 130;
      p1.y = 130;
      p2.y = 135;
      p2.x = 430;
      p3.x = 130;
      p3.y = 304;
      p4.x = 434;
      p4.y = 304;
      fondo1 = this.createBitmap('pas1', 'pas1', 0, 1);
      p1.addChild(fondo1);
      for (i = _i = 0; _i <= 4; i = ++_i) {
        t = new DraggableText(this.textos.pasaporte1[i], this.textos.pasaporte1[i], i, this.textos.positions[i].x, this.textos.positions[i].y);
        p1.addChild(t);
      }
      fondo2 = this.createBitmap('pas2', 'pas2', 0, -4);
      p2.addChild(fondo2);
      for (i = _j = 0; _j <= 4; i = ++_j) {
        t = new DraggableText(this.textos.pasaporte2[i], this.textos.pasaporte2[i], i, this.textos.positions[i].x, this.textos.positions[i].y);
        p2.addChild(t);
      }
      fondo3 = this.createBitmap('pas3', 'pas3', 0, 1);
      p3.addChild(fondo3);
      for (i = _k = 0; _k <= 4; i = ++_k) {
        t = new DraggableText(this.textos.pasaporte3[i], this.textos.pasaporte3[i], i, this.textos.positions[i].x, this.textos.positions[i].y);
        p3.addChild(t);
      }
      fondo4 = this.createBitmap('pas4', 'pas4', -3, 3);
      p4.addChild(fondo4);
      for (i = _l = 0; _l <= 4; i = ++_l) {
        t = new DraggableText(this.textos.pasaporte4[i], this.textos.pasaporte4[i], i, this.textos.positions[i].x, this.textos.positions[i].y);
        p4.addChild(t);
      }
      this.addToMain(p1);
      this.addToMain(p2);
      this.addToMain(p3);
      this.addToMain(p4);
      return this;
    };

    U4A6.prototype.setTexto = function() {
      var i, l1, l2, todo, txt, _i, _j, _ref, _ref1;
      l1 = new createjs.Container();
      l1.x = 0;
      l1.y = 520;
      todo = 0;
      for (i = _i = 0, _ref = this.textos.nino1.linea1.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        if (i % 2 === 0) {
          txt = new createjs.Text(this.textos.nino1.linea1[i], '24px Arial', '#333');
          console.log('impar');
          txt.x = todo;
          todo = txt.getMeasuredWidth() + 8 + txt.x;
        } else {
          txt = new WordContainer('q1', this.textos.nino1.linea1[i], '', '#f00', 30, 0, 10, 10);
          console.log('par');
          txt.x = todo;
          todo = txt.w + 15 + txt.x;
        }
        console.log(todo);
        l1.addChild(txt);
      }
      l1.x = ((800 - todo) / 2) + 35;
      l2 = new createjs.Container();
      l2.x = 0;
      l2.y = 550;
      todo = 0;
      for (i = _j = 0, _ref1 = this.textos.nino1.linea2.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
        if (i % 2 === 0) {
          txt = new createjs.Text(this.textos.nino1.linea2[i], '24px Arial', '#333');
          console.log('impar');
          txt.x = todo;
          todo = txt.getMeasuredWidth() + 8 + txt.x;
        } else {
          txt = new WordContainer('q1', this.textos.nino1.linea2[i], '', '#f00', 30, 0, 10, 10);
          console.log('par');
          txt.x = todo;
          todo = txt.w + 15 + txt.x;
        }
        console.log(todo);
        l2.addChild(txt);
      }
      l2.x = ((800 - todo) / 2) + 35;
      this.addToMain(l1);
      this.addToMain(l2);
      return this;
    };

    U4A6.prototype.introEvaluation = function() {
      return U4A6.__super__.introEvaluation.apply(this, arguments);
      /*
      		for i in [1..6] by 1
      			@observer.subscribe 'init_evaluation', @library['name'+i].onInitEvaluation
      
      		@library['characters'].currentFrame = @answers[@index].id
      
      		TweenLite.from @library['header'], 1, {y:-@library['header'].height}
      		TweenLite.from @library['instructions'], 1, {alpha :0, x: 0, delay: 0.5}
      		TweenLite.from @library['names'], 1, {alpha: 0, y: @library['names'].y + 50, delay: 1}
      		TweenLite.from @library['dropname'], 1, {alpha: 0, y: @library['dropname'].y + 50, delay: 1}
      		TweenLite.from @library['characters'], 1, {alpha: 0, y: @library['characters'].y + 20, delay: 1.5, onComplete: @playInstructions, onCompleteParams: [@]}
      */

    };

    U4A6.prototype.initEvaluation = function(e) {
      U4A6.__super__.initEvaluation.apply(this, arguments);
      this.library['characters'].currentFrame = this.answers[this.index].id;
      createjs.Sound.play(this.answers[this.index].sound);
      return TweenLite.to(this.library['characters'], 0.5, {
        alpha: 1,
        y: stageSize.h - 180,
        ease: Quart.easeOut
      });
    };

    U4A6.prototype.evaluateAnswer = function(e) {
      var pt;
      this.answer = e.target;
      pt = this.library['dropname'].globalToLocal(this.stage.mouseX, this.stage.mouseY);
      if (this.library['dropname'].hitTest(pt.x, pt.y)) {
        if (this.answer.index === this.answers[this.index].id) {
          this.answer.blink(false);
          return setTimeout(this.finishEvaluation, 1 * 1000);
        } else {
          this.warning();
          return this.answer.returnToPlace();
        }
      } else {
        return this.answer.returnToPlace();
      }
    };

    U4A6.prototype.finishEvaluation = function() {
      TweenLite.to(this.library['characters'], 0.5, {
        alpha: 0,
        y: -200,
        ease: Back.easeOut,
        onComplete: this.nextEvaluation
      });
      return this.answer.returnToPlace();
    };

    U4A6.prototype.nextEvaluation = function() {
      this.index++;
      if (this.index < this.answers.length) {
        this.library['score'].updateCount(this.index);
        this.library['characters'].alpha = 1;
        this.library['characters'].y = stageSize.h - 180;
        this.library['characters'].currentFrame = this.answers[this.index].id;
        createjs.Sound.play(this.answers[this.index].sound);
        return TweenLite.from(this.library['characters'], 0.5, {
          alpha: 0,
          y: this.library['characters'].y + 20,
          ease: Quart.easeOut
        });
      } else {
        return this.finish();
      }
    };

    U4A6.prototype.repeatSound = function() {
      return createjs.Sound.play(this.answers[this.index].sound);
    };

    U4A6.prototype.finish = function() {
      var i, _i, _results;
      U4A6.__super__.finish.apply(this, arguments);
      _results = [];
      for (i = _i = 1; _i <= 6; i = _i += 1) {
        _results.push(this.library['name' + i].blink(false));
      }
      return _results;
    };

    window.U4A6 = U4A6;

    return U4A6;

  })(Oda);

}).call(this);

// Generated by CoffeeScript 1.6.3
(function() {
  var U3A6,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  U3A6 = (function(_super) {
    __extends(U3A6, _super);

    function U3A6() {
      this.nextEvaluation = __bind(this.nextEvaluation, this);
      this.finishEvaluation = __bind(this.finishEvaluation, this);
      this.evaluateAnswer = __bind(this.evaluateAnswer, this);
      this.initEvaluation = __bind(this.initEvaluation, this);
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca.png'
        }, {
          id: 'inst',
          src: 'texto_look.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'ch01',
          src: 'chango0001.png'
        }, {
          id: 'ch02',
          src: 'chango0002.png'
        }, {
          id: 'ch03',
          src: 'chango0003.png'
        }, {
          id: 'ch04',
          src: 'chango0004.png'
        }, {
          id: 'ch05',
          src: 'chango0005.png'
        }, {
          id: 'ch06',
          src: 'chango0006.png'
        }, {
          id: 'ch07',
          src: 'chango0007.png'
        }, {
          id: 'ch08',
          src: 'chango0008.png'
        }, {
          id: 'ch09',
          src: 'chango0009.png'
        }, {
          id: 'ch10',
          src: 'chango0010.png'
        }, {
          id: 'ch11',
          src: 'chango0011.png'
        }, {
          id: 'ch12',
          src: 'chango0012.png'
        }, {
          id: 'ch13',
          src: 'chango0013.png'
        }, {
          id: 'ch14',
          src: 'chango0014.png'
        }, {
          id: 'ch15',
          src: 'chango0015.png'
        }, {
          id: 'ch16',
          src: 'chango0016.png'
        }, {
          id: 'aLetra',
          src: 'a.png'
        }, {
          id: 'bLetra',
          src: 'b.png'
        }, {
          id: 'cLetra',
          src: 'c.png'
        }, {
          id: 'dLetra',
          src: 'd.png'
        }, {
          id: 'eLetra',
          src: 'e.png'
        }, {
          id: 'fLetra',
          src: 'f.png'
        }, {
          id: 'gLetra',
          src: 'g.png'
        }, {
          id: 'hLetra',
          src: 'h.png'
        }, {
          id: 'iLetra',
          src: 'i.png'
        }, {
          id: 'jLetra',
          src: 'j.png'
        }, {
          id: 'kLetra',
          src: 'k.png'
        }, {
          id: 'lLetra',
          src: 'l.png'
        }, {
          id: 'mLetra',
          src: 'm.png'
        }, {
          id: 'nLetra',
          src: 'n.png'
        }, {
          id: 'oLetra',
          src: 'o.png'
        }, {
          id: 'pLetra',
          src: 'p.png'
        }, {
          id: 'qLetra',
          src: 'q.png'
        }, {
          id: 'rLetra',
          src: 'r.png'
        }, {
          id: 'sLetra',
          src: 's.png'
        }, {
          id: 'tLetra',
          src: 't.png'
        }, {
          id: 'uLetra',
          src: 'u.png'
        }, {
          id: 'vLetra',
          src: 'v.png'
        }, {
          id: 'wLetra',
          src: 'w.png'
        }, {
          id: 'xLetra',
          src: 'x.png'
        }, {
          id: 'yLetra',
          src: 'y.png'
        }, {
          id: 'zLetra',
          src: 'z.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/boing.mp3',
          id: 'boing'
        }, {
          src: 'sounds/good.mp3',
          id: 'good'
        }, {
          src: 'sounds/TU2_U2_A1_instructions.mp3',
          id: 'instructions'
        }
      ];
      this.abc = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];
      this.answers = [];
      U3A6.__super__.constructor.call(this, null, manifest, sounds);
    }

    U3A6.prototype.setStage = function() {
      U3A6.__super__.setStage.apply(this, arguments);
      this.insertBitmap('header', 'head', stageSize.w / 2, 0, 'tc');
      this.insertBitmap('instructions', 'inst', 20, 100);
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, 12, 0));
      return this.setDropper().setChango().createAlphabet().introEvaluation();
    };

    U3A6.prototype.setDropper = function() {
      return this;
    };

    U3A6.prototype.setChango = function() {
      this.insertSprite('chango', ['ch01', 'ch02', 'ch03', 'ch04', 'ch05', 'ch06', 'ch07', 'ch08', 'ch09', 'ch10', 'ch11', 'ch12', 'ch13', 'ch14', 'ch15', 'ch16'], null, 549, 150, 'tl');
      return this;
    };

    U3A6.prototype.createAlphabet = function() {
      var alphabet, i, letter, letterObj, _i, _ref;
      alphabet = new createjs.Container();
      alphabet.x = 125;
      alphabet.y = 440;
      alphabet.name = 'alphabet';
      for (i = _i = 0, _ref = this.abc.length - 1; _i <= _ref; i = _i += 1) {
        letter = this.abc[i];
        if (i <= 9) {
          letterObj = new Draggable(letter, this.preload.getResult(letter + 'Letra'), letter, 41.5 * i, 0);
        } else if (i <= 18) {
          letterObj = new Draggable(letter, this.preload.getResult(letter + 'Letra'), letter, 41.5 * i - 395, 34);
        } else {
          letterObj = new Draggable(letter, this.preload.getResult(letter + 'Letra'), letter, 41.5 * i - 750, 68);
        }
        letterObj.onInitEvaluation();
        alphabet.addChild(letterObj);
        this.addToLibrary(letterObj);
      }
      return this.addToMain(alphabet);
    };

    U3A6.prototype.introEvaluation = function() {
      U3A6.__super__.introEvaluation.apply(this, arguments);
      TweenLite.from(this.library['header'], 1, {
        y: -this.library['header'].height
      });
      TweenLite.from(this.library['instructions'], 1, {
        alpha: 0,
        x: 0,
        delay: 0.5
      });
      TweenLite.from(this.library['dropper'], 1, {
        alpha: 0,
        x: this.library['dropper'].x + 50,
        ease: Quart.easeOut,
        delay: 3,
        onComplete: this.playInstructions,
        onCompleteParams: [this]
      });
      return TweenMax.allFrom([this.library['nube1'], this.library['nube2'], this.library['nube3'], this.library['nube4']], 1, {
        alpha: 0,
        y: stageSize.h,
        delay: 2
      });
    };

    U3A6.prototype.initEvaluation = function(e) {
      var i, _i, _results;
      U3A6.__super__.initEvaluation.apply(this, arguments);
      _results = [];
      for (i = _i = 0; _i <= 3; i = _i += 1) {
        _results.push(this.library['tn' + i].addEventListener('drop', this.evaluateAnswer));
      }
      return _results;
    };

    U3A6.prototype.evaluateAnswer = function(e) {
      var pt;
      this.answer = e.target;
      pt = this.library['dropper'].globalToLocal(this.stage.mouseX, this.stage.mouseY);
      if (this.library['dropper'].hitTest(pt.x, pt.y)) {
        if (this.answer.index === this.answers[this.index].id) {
          this.answer.x = this.answer.pos.x;
          this.answer.y = this.answer.pos.y;
          this.library['dropper'].changeText(this.answer.text.text);
          return setTimeout(this.finishEvaluation, 1 * 1000);
        } else {
          this.answer.returnToPlace();
          return this.warning();
        }
      } else {
        return this.answer.returnToPlace();
      }
    };

    U3A6.prototype.finishEvaluation = function() {
      this.library['score'].plusOne();
      createjs.Sound.play('good');
      return TweenLite.to(this.library['dropper'], 0.5, {
        alpha: 0,
        y: stageSize.h,
        ease: Back.easeOut,
        onComplete: this.nextEvaluation
      });
    };

    U3A6.prototype.nextEvaluation = function() {
      this.index++;
      if (this.index < this.answers.length) {
        this.library['dropper'].y = 525;
        this.library['dropper'].x = 150 + 50;
        this.library['dropper'].changeText('');
        this.library['dropper'].changeLabel(this.answers[this.index].text);
        return TweenLite.to(this.library['dropper'], 0.5, {
          alpha: 1,
          x: 150,
          ease: Quart.easeOut
        });
      } else {
        return this.finish();
      }
    };

    U3A6.prototype.finish = function() {
      return U3A6.__super__.finish.apply(this, arguments);
    };

    window.U3A6 = U3A6;

    return U3A6;

  })(Oda);

}).call(this);

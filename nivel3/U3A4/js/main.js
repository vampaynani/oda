// Generated by CoffeeScript 1.6.3
(function() {
  var U3A4,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  U3A4 = (function(_super) {
    __extends(U3A4, _super);

    function U3A4() {
      this.nextEvaluation = __bind(this.nextEvaluation, this);
      this.clearEvaluation = __bind(this.clearEvaluation, this);
      this.finishEvaluation = __bind(this.finishEvaluation, this);
      this.evaluateAnswer3 = __bind(this.evaluateAnswer3, this);
      this.evaluateAnswer2 = __bind(this.evaluateAnswer2, this);
      this.evaluateAnswer1 = __bind(this.evaluateAnswer1, this);
      this.initEvaluation = __bind(this.initEvaluation, this);
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca1.png'
        }, {
          id: 'inst',
          src: 'inst.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'n1',
          src: 'nube1.png'
        }, {
          id: 'n2',
          src: 'nube2.png'
        }, {
          id: 'n3',
          src: 'nube3.png'
        }, {
          id: 'caras',
          src: 'caras.png'
        }, {
          id: 'img01',
          src: 'imagenes0001.png'
        }, {
          id: 'img02',
          src: 'imagenes0002.png'
        }, {
          id: 'img03',
          src: 'imagenes0003.png'
        }, {
          id: 'img04',
          src: 'imagenes0004.png'
        }, {
          id: 'img05',
          src: 'imagenes0005.png'
        }, {
          id: 'img06',
          src: 'imagenes0006.png'
        }, {
          id: 'img07',
          src: 'imagenes0007.png'
        }, {
          id: 'img08',
          src: 'imagenes0008.png'
        }, {
          id: 'img09',
          src: 'imagenes0009.png'
        }, {
          id: 'img10',
          src: 'imagenes0010.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/boing.mp3',
          id: 'boing'
        }, {
          src: 'sounds/TU3_U3_A4_instructions.mp3',
          id: 'instructions'
        }, {
          src: 'sounds/wrong.mp3',
          id: 'wrong'
        }, {
          src: 'sounds/good.mp3',
          id: 'good'
        }
      ];
      this.answers = [
        {
          w1: 0,
          w2: 4,
          w3: 5
        }, {
          w1: 3,
          w2: 0,
          w3: 0
        }, {
          w1: 3,
          w2: 1,
          w3: 2
        }, {
          w1: 1,
          w2: 3,
          w3: 3
        }, {
          w1: 0,
          w2: 4,
          w3: 8
        }, {
          w1: 0,
          w2: 5,
          w3: 4
        }, {
          w1: 2,
          w2: 2,
          w3: 7
        }, {
          w1: 1,
          w2: 4,
          w3: 9
        }, {
          w1: 3,
          w2: 3,
          w3: 1
        }, {
          w1: 2,
          w2: 3,
          w3: 6
        }
      ];
      U3A4.__super__.constructor.call(this, null, manifest, sounds);
    }

    U3A4.prototype.setStage = function() {
      U3A4.__super__.setStage.apply(this, arguments);
      this.insertBitmap('header', 'head', stageSize.w / 2, 0, 'tc');
      this.insertInstructions('instructions', 'Look and click on the word to make a sentence.', 40, 100);
      this.insertSprite('characters', ['img01', 'img02', 'img03', 'img04', 'img05', 'img06', 'img07', 'img08', 'img09', 'img10'], null, stageSize.w / 2, 235, 'mc');
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, 5, 0));
      this.insertBitmap('caras', 'caras', 670, 120);
      return this.setDropper().setNube1().setNube2().setNube3().introEvaluation();
    };

    U3A4.prototype.setDropper = function() {
      var dropper, h1, h2, h3, text;
      dropper = new createjs.Container();
      dropper.x = 150;
      dropper.y = 541;
      dropper.name = 'dropper';
      text = new createjs.Text('I', '26px Quicksand', '#333');
      h1 = new WordContainer('h1', '', '#fff', '#F59743', 20, 0, 167, 30);
      h2 = new WordContainer('h2', '', '#fff', '#F59743', 210, 0, 167, 30);
      h3 = new WordContainer('h3', '', '#fff', '#F59743', 396, 0, 167, 30);
      dropper.addChild(text, h1, h2, h3);
      this.addToLibrary(h1, h2, h3);
      this.addToMain(dropper);
      return this;
    };

    U3A4.prototype.setNube1 = function() {
      var n1, nube1, t1n1, t2n1, t3n1, t4n1;
      nube1 = new createjs.Container();
      nube1.x = 72;
      nube1.y = 339;
      nube1.name = 'nube1';
      n1 = this.createBitmap('n1', 'n1', 0, 0);
      t1n1 = new DraggableText('t1n1', "love", 0, 37, 21);
      t2n1 = new DraggableText('t2n1', "don't like", 1, 54, 51);
      t3n1 = new DraggableText('t3n1', "hate", 2, 36, 79);
      t4n1 = new DraggableText('t4n1', "like", 3, 84, 99);
      nube1.addChild(n1, t1n1, t2n1, t3n1, t4n1);
      this.addToLibrary(n1, t1n1, t2n1, t3n1, t4n1);
      this.addToMain(nube1);
      return this;
    };

    U3A4.prototype.setNube2 = function() {
      var n2, nube2, t1n2, t2n2, t3n2, t4n2, t5n2, t6n2;
      nube2 = new createjs.Container();
      nube2.x = 241;
      nube2.y = 336;
      nube2.name = 'nube2';
      n2 = this.createBitmap('n2', 'n2', 0, 0);
      t1n2 = new DraggableText('t1n2', "going", 0, 34, 21);
      t2n2 = new DraggableText('t2n2', "chatting", 1, 79, 49);
      t3n2 = new DraggableText('t3n2', "doing", 2, 34, 76);
      t4n2 = new DraggableText('t4n2', "playing", 3, 99, 102);
      t5n2 = new DraggableText('t5n2', "taking", 4, 17, 106);
      t6n2 = new DraggableText('t6n2', "learning", 5, 83, 144);
      nube2.addChild(n2, t1n2, t2n2, t3n2, t4n2, t5n2, t6n2);
      this.addToLibrary(n2, t1n2, t2n2, t3n2, t4n2, t5n2, t6n2);
      this.addToMain(nube2);
      return this;
    };

    U3A4.prototype.setNube3 = function() {
      var n3, nube3, t10n3, t1n3, t2n3, t3n3, t4n3, t5n3, t6n3, t7n3, t8n3, t9n3;
      nube3 = new createjs.Container();
      nube3.x = 437;
      nube3.y = 310;
      nube3.name = 'nube3';
      n3 = this.createBitmap('n3', 'n3', 0, 0);
      t1n3 = new DraggableText('t1n3', "roller skating", 0, 54, 33);
      t2n3 = new DraggableText('t2n3', "the violin", 1, 19, 61);
      t3n3 = new DraggableText('t3n3', "online with friends", 2, 43, 93);
      t4n3 = new DraggableText('t4n3', "in the school band", 3, 21, 127);
      t5n3 = new DraggableText('t5n3', "English", 4, 57, 164);
      t6n3 = new DraggableText('t6n3', "ballet class", 5, 193, 28);
      t7n3 = new DraggableText('t7n3', "computer games", 6, 164, 66);
      t8n3 = new DraggableText('t8n3', "gymnastics", 7, 208, 115);
      t9n3 = new DraggableText('t9n3', "karate lessons", 8, 174, 160);
      t10n3 = new DraggableText('t10n3', "swimming lessons", 9, 117, 191);
      nube3.addChild(n3, t1n3, t2n3, t3n3, t4n3, t5n3, t6n3, t7n3, t8n3, t9n3, t10n3);
      this.addToLibrary(n3, t1n3, t2n3, t3n3, t4n3, t5n3, t6n3, t7n3, t8n3, t9n3, t10n3);
      this.addToMain(nube3);
      return this;
    };

    U3A4.prototype.introEvaluation = function() {
      var i, _i;
      U3A4.__super__.introEvaluation.apply(this, arguments);
      for (i = _i = 1; _i <= 4; i = _i += 1) {
        this.library['t' + i + 'n1'].initDragListener();
      }
      this.library['characters'].currentFrame = this.index;
      this.library['characters'].scaleX = 1;
      this.library['characters'].scaleY = 1;
      this.library['characters'].alpha = 1;
      TweenLite.from(this.library['header'], 1, {
        y: -this.library['header'].height
      });
      TweenLite.from(this.library['instructions'], 1, {
        alpha: 0,
        x: 0,
        delay: 0.5
      });
      TweenLite.from(this.library['characters'], 1, {
        alpha: 0,
        y: this.library['characters'].y + 50,
        delay: 1
      });
      TweenLite.from(this.library['dropper'], 1, {
        alpha: 0,
        y: this.library['dropper'].y + 20,
        delay: 1.2
      });
      TweenLite.from(this.library['nube1'], 1, {
        alpha: 0,
        y: this.library['nube1'].y + 20,
        delay: 1.4
      });
      TweenLite.from(this.library['nube2'], 1, {
        alpha: 0,
        y: this.library['nube2'].y + 20,
        delay: 1.5
      });
      return TweenLite.from(this.library['nube3'], 1, {
        alpha: 0,
        y: this.library['nube3'].y + 20,
        delay: 1.6,
        onComplete: this.playInstructions,
        onCompleteParams: [this]
      });
    };

    U3A4.prototype.initEvaluation = function(e) {
      var i, _i;
      U3A4.__super__.initEvaluation.apply(this, arguments);
      this.library['h1'].blink();
      this.blink(this.library['n1']);
      for (i = _i = 1; _i <= 4; i = _i += 1) {
        this.library['t' + i + 'n1'].addEventListener('drop', this.evaluateAnswer1);
      }
      return false;
    };

    U3A4.prototype.evaluateAnswer1 = function(e) {
      var i, pt, _i, _j;
      this.answer = e.target;
      pt = this.library['h1'].globalToLocal(this.stage.mouseX, this.stage.mouseY);
      if (this.library['h1'].hitTest(pt.x, pt.y)) {
        if (this.answer.index === this.answers[this.index].w1) {
          this.answer.visible = false;
          this.library['h1'].changeText(this.answer.text.text);
          this.library['h1'].blink(false);
          this.blink(this.library['n1'], false);
          this.library['h2'].blink();
          this.blink(this.library['n2']);
          createjs.Sound.play('good');
          for (i = _i = 1; _i <= 6; i = _i += 1) {
            this.library['t' + i + 'n2'].initDragListener();
          }
          for (i = _j = 1; _j <= 6; i = _j += 1) {
            this.library['t' + i + 'n2'].addEventListener('drop', this.evaluateAnswer2);
          }
          return false;
        } else {
          this.warning();
          return this.answer.returnToPlace();
        }
      } else {
        return this.answer.returnToPlace();
      }
    };

    U3A4.prototype.evaluateAnswer2 = function(e) {
      var i, pt, _i, _j;
      this.answer = e.target;
      pt = this.library['h2'].globalToLocal(this.stage.mouseX, this.stage.mouseY);
      if (this.library['h2'].hitTest(pt.x, pt.y)) {
        if (this.answer.index === this.answers[this.index].w2) {
          this.answer.visible = false;
          this.library['h2'].changeText(this.answer.text.text);
          this.library['h2'].blink(false);
          this.blink(this.library['n2'], false);
          this.library['h3'].blink();
          this.blink(this.library['n3']);
          createjs.Sound.play('good');
          for (i = _i = 1; _i <= 10; i = _i += 1) {
            this.library['t' + i + 'n3'].initDragListener();
          }
          for (i = _j = 1; _j <= 10; i = _j += 1) {
            this.library['t' + i + 'n3'].addEventListener('drop', this.evaluateAnswer3);
          }
          return false;
        } else {
          this.warning();
          return this.answer.returnToPlace();
        }
      } else {
        return this.answer.returnToPlace();
      }
    };

    U3A4.prototype.evaluateAnswer3 = function(e) {
      var i, pt, _i, _j, _results;
      this.answer = e.target;
      console.log('3');
      pt = this.library['h3'].globalToLocal(this.stage.mouseX, this.stage.mouseY);
      if (this.library['h3'].hitTest(pt.x, pt.y)) {
        if (this.answer.index === this.answers[this.index].w3) {
          this.answer.visible = false;
          this.library['h3'].changeText(this.answer.text.text);
          this.library['h3'].blink(false);
          this.blink(this.library['n3'], false);
          setTimeout(this.finishEvaluation, 1 * 1000);
          createjs.Sound.play('good');
          for (i = _i = 1; _i <= 6; i = _i += 1) {
            this.library['t' + i + 'n2'].removeEventListener('drop', this.evaluateAnswer2);
            this.library['t' + i + 'n2'].endDragListener();
          }
          _results = [];
          for (i = _j = 1; _j <= 10; i = _j += 1) {
            this.library['t' + i + 'n3'].removeEventListener('drop', this.evaluateAnswer3);
            _results.push(this.library['t' + i + 'n3'].endDragListener());
          }
          return _results;
        } else {
          this.warning();
          return this.answer.returnToPlace();
        }
      } else {
        return this.answer.returnToPlace();
      }
    };

    U3A4.prototype.finishEvaluation = function() {
      this.library['score'].plusOne();
      return this.clearEvaluation();
    };

    U3A4.prototype.clearEvaluation = function(e) {
      var i, _i, _j, _k, _l;
      for (i = _i = 1; _i <= 4; i = _i += 1) {
        this.library['t' + i + 'n1'].visible = true;
        this.library['t' + i + 'n1'].returnToPlace();
      }
      for (i = _j = 1; _j <= 6; i = _j += 1) {
        this.library['t' + i + 'n2'].visible = true;
        this.library['t' + i + 'n2'].returnToPlace();
      }
      for (i = _k = 1; _k <= 10; i = _k += 1) {
        this.library['t' + i + 'n3'].visible = true;
        this.library['t' + i + 'n3'].returnToPlace();
      }
      for (i = _l = 1; _l <= 3; i = _l += 1) {
        this.library['h' + i].changeText('');
      }
      return TweenLite.to(this.library['characters'], 0.5, {
        scaleX: 1.5,
        scaleY: 1.5,
        alpha: 0,
        ease: Back.easeOut,
        onComplete: this.nextEvaluation
      });
    };

    U3A4.prototype.nextEvaluation = function() {
      var i, _i, _results;
      this.index++;
      if (this.index < this.answers.length) {
        this.library['characters'].currentFrame = this.index;
        this.library['h1'].blink();
        this.blink(this.library['n1']);
        TweenLite.to(this.library['characters'], 0.5, {
          scaleX: 1,
          scaleY: 1,
          alpha: 1,
          ease: Back.easeOut
        });
        _results = [];
        for (i = _i = 1; _i <= 2; i = _i += 1) {
          _results.push(this.library['t' + i + 'n1'].addEventListener('drop', this.evaluateAnswer1));
        }
        return _results;
      } else {
        return this.finish();
      }
    };

    U3A4.prototype.blink = function(obj, state) {
      if (state == null) {
        state = true;
      }
      TweenMax.killTweensOf(obj);
      obj.alpha = 1;
      if (state) {
        return TweenMax.to(obj, 0.5, {
          alpha: .5,
          repeat: -1,
          yoyo: true
        });
      }
    };

    U3A4.prototype.finish = function() {
      TweenLite.to(this.library['dropper'], 1, {
        alpha: 0,
        y: this.library['dropper'].y + 20,
        delay: 0.2
      });
      TweenLite.to(this.library['caras'], 1, {
        alpha: 0,
        y: this.library['caras'].y + 20,
        delay: 0.2
      });
      TweenLite.to(this.library['nube1'], 1, {
        alpha: 0,
        y: this.library['nube1'].y + 20,
        delay: 0.1
      });
      TweenLite.to(this.library['nube2'], 1, {
        alpha: 0,
        y: this.library['nube2'].y + 20,
        delay: 0.1
      });
      TweenLite.to(this.library['nube3'], 1, {
        alpha: 0,
        y: this.library['nube3'].y + 20,
        delay: 0.1
      });
      return U3A4.__super__.finish.apply(this, arguments);
    };

    window.U3A4 = U3A4;

    return U3A4;

  })(Oda);

}).call(this);

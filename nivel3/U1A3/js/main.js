// Generated by CoffeeScript 1.6.3
(function() {
  var U1A3,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  U1A3 = (function(_super) {
    __extends(U1A3, _super);

    function U1A3() {
      this.repeatSound = __bind(this.repeatSound, this);
      this.nextEvaluation = __bind(this.nextEvaluation, this);
      this.finishEvaluation = __bind(this.finishEvaluation, this);
      this.evaluateAnswer = __bind(this.evaluateAnswer, this);
      this.initEvaluation = __bind(this.initEvaluation, this);
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca.png'
        }, {
          id: 'inst',
          src: 'texto_look.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'repeatbtn',
          src: 'repeat-btn.png'
        }, {
          id: 'playagain',
          src: 'play_again.png'
        }, {
          id: 'startgame',
          src: 'start_game.png'
        }, {
          id: 'btnfalse',
          src: 'btn_false.png'
        }, {
          id: 'btntrue',
          src: 'btn_true.png'
        }, {
          id: 'aqLabelAllison',
          src: 'aquarium/label_Allison.png'
        }, {
          id: 'aqLabelCarl',
          src: 'aquarium/label_Carl.png'
        }, {
          id: 'aqLabelDana',
          src: 'aquarium/label_Dana.png'
        }, {
          id: 'aqLabelDave',
          src: 'aquarium/label_Dave.png'
        }, {
          id: 'aqLabelDoris',
          src: 'aquarium/label_Doris.png'
        }, {
          id: 'aqLabelEmma',
          src: 'aquarium/label_Emma.png'
        }, {
          id: 'aqLabelJake',
          src: 'aquarium/label_Jake.png'
        }, {
          id: 'aqLabelJohn',
          src: 'aquarium/label_John.png'
        }, {
          id: 'aqLabelMitch',
          src: 'aquarium/label_Mitch.png'
        }, {
          id: 'aqLabelStella',
          src: 'aquarium/label_Stella.png'
        }, {
          id: 'aqPropbg',
          src: 'aquarium/prop_bg.png'
        }, {
          id: 'smLabelAva',
          src: 'space_museum/label_Ava.png'
        }, {
          id: 'smLabelJoshAndDiana',
          src: 'space_museum/label_JoshAndDiana.png'
        }, {
          id: 'smLabelKatie',
          src: 'space_museum/label_Katie.png'
        }, {
          id: 'smLabelKyle',
          src: 'space_museum/label_Kyle.png'
        }, {
          id: 'smLabelLindsey',
          src: 'space_museum/label_Lindsey.png'
        }, {
          id: 'smLabelPhilAndArthur',
          src: 'space_museum/label_PhilAndArthur.png'
        }, {
          id: 'smLabelSpot',
          src: 'space_museum/label_Spot.png'
        }, {
          id: 'smLabelZoe',
          src: 'space_museum/label_Zoe.png'
        }, {
          id: 'smPropbg',
          src: 'space_museum/prop_bg.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/boing.mp3',
          id: 'boing'
        }, {
          src: 'sounds/TU2_U4_A6_instructions.mp3',
          id: 'instructions'
        }
      ];
      this.answers = [];
      this.personaje = {
        aquarium: [
          {
            id: 'aqLabelAllison',
            x: '356',
            y: '162'
          }, {
            id: 'aqLabelCarl',
            x: '487',
            y: '202'
          }, {
            id: 'aqLabelDana',
            x: '59',
            y: '333'
          }, {
            id: 'aqLabelDave',
            x: '312',
            y: '97'
          }, {
            id: 'aqLabelDoris',
            x: '416',
            y: '359'
          }, {
            id: 'aqLabelEmma',
            x: '521',
            y: '254'
          }, {
            id: 'aqLabelJake',
            x: '170',
            y: '364'
          }, {
            id: 'aqLabelJohn',
            x: '179',
            y: '172'
          }, {
            id: 'aqLabelMitch',
            x: '337',
            y: '315'
          }, {
            id: 'aqLabelStella',
            x: '280',
            y: '364'
          }
        ],
        museum: [
          {
            id: 'smLabelAva',
            x: '251',
            y: '89'
          }, {
            id: 'smLabelJoshAndDiana',
            x: '400',
            y: '270'
          }, {
            id: 'smLabelKatie',
            x: '183',
            y: '192'
          }, {
            id: 'smLabelKyle',
            x: '124',
            y: '315'
          }, {
            id: 'smLabelLindsey',
            x: '118',
            y: '91'
          }, {
            id: 'smLabelPhilAndArthur',
            x: '330',
            y: '397'
          }, {
            id: 'smLabelSpot',
            x: '294',
            y: '199'
          }, {
            id: 'smLabelZoe',
            x: '438',
            y: '140'
          }
        ]
      };
      this.preguntas = {
        aquarium: [
          {
            statement: 'frase pregunta aquario'
          }
        ],
        museum: [
          {
            statement: 'frase pregunta museo'
          }
        ]
      };
      U1A3.__super__.constructor.call(this, null, manifest, sounds);
    }

    U1A3.prototype.setStage = function() {
      U1A3.__super__.setStage.apply(this, arguments);
      this.insertBitmap('header', 'head', stageSize.w / 2, 0, 'tc');
      this.insertBitmap('instructions', 'inst', 20, 100);
      this.insertBitmap('btnfalse', 'btnfalse', 457, 541);
      this.insertBitmap('btntrue', 'btntrue', 330, 541);
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, 5, 0));
      return this.setAquarium().setMuseum().introEvaluation();
    };

    U1A3.prototype.setAquarium = function() {
      var aquarium, fondo, i, label, text, _i, _j;
      aquarium = new createjs.Container();
      aquarium.x = 120;
      aquarium.y = 80;
      fondo = this.createBitmap('aqPropbg', 'aqPropbg', 15, 75);
      aquarium.addChild(fondo);
      this.addToLibrary(fondo);
      for (i = _i = 0; _i <= 8; i = ++_i) {
        label = this.createBitmap(this.personaje.aquarium[i].id, this.personaje.aquarium[i].id, this.personaje.aquarium[i].x, this.personaje.aquarium[i].y);
        aquarium.addChild(label);
        this.addToLibrary(label);
      }
      for (i = _j = 0; _j <= 0; i = ++_j) {
        text = new createjs.Text(this.preguntas.aquarium[i].statement, '24px Arial', '#333');
        text.x = stageSize.w / 2 - 75;
        text.y = 420;
        text.textAlign = 'center';
        aquarium.addChild(text);
      }
      this.addToMain(aquarium);
      return this;
    };

    U1A3.prototype.setMuseum = function() {
      var fondo, i, label, museum, text, _i, _j;
      museum = new createjs.Container();
      museum.x = 120;
      museum.y = 60;
      fondo = this.createBitmap('smPropbg', 'smPropbg', 73, 22);
      museum.addChild(fondo);
      this.addToLibrary(fondo);
      for (i = _i = 0; _i <= 7; i = ++_i) {
        label = this.createBitmap(this.personaje.museum[i].id, this.personaje.museum[i].id, this.personaje.museum[i].x, this.personaje.museum[i].y);
        museum.addChild(label);
        this.addToLibrary(label);
      }
      for (i = _j = 0; _j <= 0; i = ++_j) {
        text = new createjs.Text(this.preguntas.museum[i].statement, '24px Arial', '#333');
        text.x = stageSize.w / 2 - 75;
        text.y = 440;
        text.textAlign = 'center';
        museum.addChild(text);
      }
      this.addToMain(museum);
      return this;
    };

    U1A3.prototype.introEvaluation = function() {
      return U1A3.__super__.introEvaluation.apply(this, arguments);
      /*
      		for i in [1..6] by 1
      			@observer.subscribe 'init_evaluation', @library['name'+i].onInitEvaluation
      
      		@library['characters'].currentFrame = @answers[@index].id
      
      		TweenLite.from @library['header'], 1, {y:-@library['header'].height}
      		TweenLite.from @library['instructions'], 1, {alpha :0, x: 0, delay: 0.5}
      		TweenLite.from @library['names'], 1, {alpha: 0, y: @library['names'].y + 50, delay: 1}
      		TweenLite.from @library['dropname'], 1, {alpha: 0, y: @library['dropname'].y + 50, delay: 1}
      		TweenLite.from @library['characters'], 1, {alpha: 0, y: @library['characters'].y + 20, delay: 1.5, onComplete: @playInstructions, onCompleteParams: [@]}
      */

    };

    U1A3.prototype.initEvaluation = function(e) {
      U1A3.__super__.initEvaluation.apply(this, arguments);
      this.library['characters'].currentFrame = this.answers[this.index].id;
      createjs.Sound.play(this.answers[this.index].sound);
      return TweenLite.to(this.library['characters'], 0.5, {
        alpha: 1,
        y: stageSize.h - 180,
        ease: Quart.easeOut
      });
    };

    U1A3.prototype.evaluateAnswer = function(e) {
      var pt;
      this.answer = e.target;
      pt = this.library['dropname'].globalToLocal(this.stage.mouseX, this.stage.mouseY);
      if (this.library['dropname'].hitTest(pt.x, pt.y)) {
        if (this.answer.index === this.answers[this.index].id) {
          this.answer.blink(false);
          return setTimeout(this.finishEvaluation, 1 * 1000);
        } else {
          this.warning();
          return this.answer.returnToPlace();
        }
      } else {
        return this.answer.returnToPlace();
      }
    };

    U1A3.prototype.finishEvaluation = function() {
      TweenLite.to(this.library['characters'], 0.5, {
        alpha: 0,
        y: -200,
        ease: Back.easeOut,
        onComplete: this.nextEvaluation
      });
      return this.answer.returnToPlace();
    };

    U1A3.prototype.nextEvaluation = function() {
      this.index++;
      if (this.index < this.answers.length) {
        this.library['score'].updateCount(this.index);
        this.library['characters'].alpha = 1;
        this.library['characters'].y = stageSize.h - 180;
        this.library['characters'].currentFrame = this.answers[this.index].id;
        createjs.Sound.play(this.answers[this.index].sound);
        return TweenLite.from(this.library['characters'], 0.5, {
          alpha: 0,
          y: this.library['characters'].y + 20,
          ease: Quart.easeOut
        });
      } else {
        return this.finish();
      }
    };

    U1A3.prototype.repeatSound = function() {
      return createjs.Sound.play(this.answers[this.index].sound);
    };

    U1A3.prototype.finish = function() {
      var i, _i, _results;
      U1A3.__super__.finish.apply(this, arguments);
      _results = [];
      for (i = _i = 1; _i <= 6; i = _i += 1) {
        _results.push(this.library['name' + i].blink(false));
      }
      return _results;
    };

    window.U1A3 = U1A3;

    return U1A3;

  })(Oda);

}).call(this);

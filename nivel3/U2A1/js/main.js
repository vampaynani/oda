// Generated by CoffeeScript 1.6.3
(function() {
  var U1A1,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  U1A1 = (function(_super) {
    __extends(U1A1, _super);

    function U1A1() {
      this.nextEvaluation = __bind(this.nextEvaluation, this);
      this.clearEvaluation = __bind(this.clearEvaluation, this);
      this.finishEvaluation = __bind(this.finishEvaluation, this);
      this.evaluateAnswer3 = __bind(this.evaluateAnswer3, this);
      this.evaluateAnswer2 = __bind(this.evaluateAnswer2, this);
      this.evaluateAnswer1 = __bind(this.evaluateAnswer1, this);
      this.initEvaluation = __bind(this.initEvaluation, this);
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca.png'
        }, {
          id: 'inst',
          src: 'texto_look.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'propblueberries',
          src: 'prop_blueberries.png'
        }, {
          id: 'propcheese',
          src: 'prop_cheese.png'
        }, {
          id: 'propcorn',
          src: 'prop_corn.png'
        }, {
          id: 'propeggs',
          src: 'prop_eggs.png'
        }, {
          id: 'propgreenPeppers',
          src: 'prop_greenPeppers.png'
        }, {
          id: 'prophoney',
          src: 'prop_honey.png'
        }, {
          id: 'propmarket',
          src: 'prop_market.png'
        }, {
          id: 'propmeat',
          src: 'prop_meat.png'
        }, {
          id: 'propmilk',
          src: 'prop_milk.png'
        }, {
          id: 'propmushrooms',
          src: 'prop_mushrooms.png'
        }, {
          id: 'proppeaches',
          src: 'prop_peaches.png'
        }, {
          id: 'propPeanutButter',
          src: 'prop_PeanutButter.png'
        }, {
          id: 'proppumpkins',
          src: 'prop_pumpkins.png'
        }, {
          id: 'propraspberries',
          src: 'prop_raspberries.png'
        }, {
          id: 'propstrawberryJelly',
          src: 'prop_strawberryJelly.png'
        }, {
          id: 'propsugar',
          src: 'prop_sugar.png'
        }, {
          id: 'propyogurt',
          src: 'prop_yogurt.png'
        }, {
          id: 'n3',
          src: 'tag_food.png'
        }, {
          id: 'n2',
          src: 'tag_pronoun.png'
        }, {
          id: 'n1',
          src: 'tag_verb.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/boing.mp3',
          id: 'boing'
        }, {
          src: 'sounds/TU2_U1_A1_Instructions.mp3',
          id: 'instructions'
        }, {
          src: 'sounds/wrong.mp3',
          id: 'wrong'
        }
      ];
      this.answers = [
        {
          w1: 1,
          w2: 2,
          w3: 2,
          sound: 'song'
        }, {
          w1: 1,
          w2: 1,
          w3: 4,
          sound: 'outside'
        }, {
          w1: 0,
          w2: 0,
          w3: 0,
          sound: 'picture'
        }, {
          w1: 1,
          w2: 3,
          w3: 1,
          sound: 'english'
        }, {
          w1: 0,
          w2: 1,
          w3: 3,
          sound: 'flute'
        }
      ];
      this.positions = {
        market2: [
          {
            id: 'propstrawberryJelly',
            x: '310',
            y: '106'
          }, {
            id: 'propPeanutButter',
            x: '467',
            y: '120'
          }, {
            id: 'propcorn',
            x: '223',
            y: '167'
          }, {
            id: 'propgreenPeppers',
            x: '294',
            y: '186'
          }, {
            id: 'propmushrooms',
            x: '370',
            y: '185'
          }, {
            id: 'propblueberries',
            x: '440',
            y: '172'
          }, {
            id: 'proppeaches',
            x: '530',
            y: '172'
          }, {
            id: 'propsugar',
            x: '322',
            y: '273'
          }
        ],
        market1: [
          {
            id: 'propmilk',
            x: '303',
            y: '105'
          }, {
            id: 'prophoney',
            x: '466',
            y: '116'
          }, {
            id: 'propcheese',
            x: '223',
            y: '159'
          }, {
            id: 'propmeat',
            x: '310',
            y: '160'
          }, {
            id: 'propyogurt',
            x: '370',
            y: '181'
          }, {
            id: 'propeggs',
            x: '434',
            y: '183'
          }, {
            id: 'propraspberries',
            x: '505',
            y: '201'
          }, {
            id: 'proppumpkins',
            x: '405',
            y: '270'
          }
        ]
      };
      U1A1.__super__.constructor.call(this, null, manifest, sounds);
    }

    U1A1.prototype.setStage = function() {
      U1A1.__super__.setStage.apply(this, arguments);
      this.insertBitmap('header', 'head', stageSize.w / 2, 0, 'tc');
      this.insertBitmap('instructions', 'inst', 20, 100);
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, 5, 0));
      return this.setDropper().setNube1().setNube2().setNube3().introEvaluation();
    };

    U1A1.prototype.setDropper = function() {
      var a, dropper, h1, h2, h3, i, scene, t, _i;
      scene = new createjs.Container();
      scene.x = 88;
      scene.y = 66;
      a = this.createBitmap('propmarket', 'propmarket', 312, 169, 'mc');
      scene.addChild(a);
      for (i = _i = 0; _i <= 7; i = ++_i) {
        a = this.createBitmap(this.positions.market2[i].id, this.positions.market2[i].id, this.positions.market2[i].x, this.positions.market2[i].y, 'mc');
        scene.addChild(a);
      }
      dropper = new createjs.Container();
      dropper.x = stageSize.w / 2 - 205;
      dropper.y = 540;
      dropper.name = 'dropper';
      t = new createjs.Text('There', '24px Arial', '#333');
      t.x = 20;
      t.y = 0;
      dropper.addChild(t);
      h1 = new WordContainer('h1', '', '', '#f39234', 90, 0, 60, 22);
      h2 = new WordContainer('h2', '', '', '#f39234', 160, 0, 80, 22);
      h3 = new WordContainer('h3', '', '', '#f39234', 250, 0, 140, 22);
      t = new createjs.Text('.', '24px Arial', '#333');
      t.x = 393;
      t.y = 0;
      dropper.addChild(t);
      dropper.addChild(h1, h2, h3);
      this.addToLibrary(h1, h2, h3);
      this.addToMain(dropper, scene);
      return this;
    };

    U1A1.prototype.setNube1 = function() {
      var back, container, p1n1, p2n1, p3n1, p4n1;
      container = new createjs.Container();
      container.x = 124;
      container.y = 412;
      container.name = 'nube1';
      back = this.createBitmap('backNube1', 'n1', 0, 0);
      p1n1 = new ClickableText('p1n1', 'are', 0, 25, 20);
      p2n1 = new ClickableText('p2n1', "aren't", 1, 69, 20);
      p3n1 = new ClickableText('p3n1', 'is', 2, 44, 47);
      p4n1 = new ClickableText('p4n1', "isn't", 3, 79, 62);
      container.addChild(back, p1n1, p2n1, p3n1, p4n1);
      this.addToLibrary(back, p1n1, p2n1);
      this.addToMain(container);
      return this;
    };

    U1A1.prototype.setNube2 = function() {
      var back, container, p1n2, p2n2;
      container = new createjs.Container();
      container.x = 291;
      container.y = 432;
      container.name = 'nube2';
      back = this.createBitmap('backNube2', 'n2', 0, 0);
      p1n2 = new ClickableText('p1n2', 'any', 0, 33, 10);
      p2n2 = new ClickableText('p2n2', "some", 1, 26, 35);
      container.addChild(back, p1n2, p2n2);
      this.addToLibrary(back, p1n2, p2n2);
      this.addToMain(container);
      return this;
    };

    U1A1.prototype.setNube3 = function() {
      var back, container, p10n3, p1n3, p2n3, p3n3, p4n3, p5n3, p6n3, p7n3, p8n3, p9n3;
      container = new createjs.Container();
      container.x = 421;
      container.y = 383;
      container.name = 'nube3';
      back = this.createBitmap('backNube3', 'n3', -6, 0);
      p1n3 = new ClickableText('p1n3', 'sugar', 0, 13, 34);
      p2n3 = new ClickableText('p2n3', "mushrooms", 1, 25, 75);
      p3n3 = new ClickableText('p3n3', 'peaches', 2, 92, 17);
      p4n3 = new ClickableText('p4n3', "peanut butter", 3, 67, 45);
      p5n3 = new ClickableText('p5n3', "corn", 4, 136, 74);
      p6n3 = new ClickableText('p6n3', "blueberries", 5, 99, 100);
      p7n3 = new ClickableText('p7n3', "fish", 6, 178, 12);
      p8n3 = new ClickableText('p8n3', "green peppers", 7, 199, 36);
      p9n3 = new ClickableText('p9n3', "strawberry jelly", 8, 196, 69);
      p10n3 = new ClickableText('p10n3', "apples", 9, 212, 106);
      container.addChild(back, p1n3, p2n3, p3n3, p4n3, p5n3, p6n3, p7n3, p8n3, p9n3, p10n3);
      this.addToLibrary(back, p1n3, p2n3, p3n3, p4n3, p5n3, p6n3, p7n3, p8n3, p9n3, p10n3);
      this.addToMain(container);
      return this;
    };

    U1A1.prototype.introEvaluation = function() {
      var i, _i, _j, _k;
      U1A1.__super__.introEvaluation.apply(this, arguments);
      for (i = _i = 1; _i <= 2; i = _i += 1) {
        this.observer.subscribe('init_evaluation', this.library['p' + i + 'n1'].onInitEvaluation);
      }
      for (i = _j = 1; _j <= 4; i = _j += 1) {
        this.observer.subscribe('init_evaluation', this.library['p' + i + 'n2'].onInitEvaluation);
      }
      for (i = _k = 1; _k <= 5; i = _k += 1) {
        this.observer.subscribe('init_evaluation', this.library['p' + i + 'n3'].onInitEvaluation);
      }
      TweenLite.from(this.library['header'], 1, {
        y: -this.library['header'].height
      });
      TweenLite.from(this.library['instructions'], 1, {
        alpha: 0,
        x: 0,
        delay: 0.5
      });
      TweenLite.from(this.library['dropper'], 1, {
        alpha: 0,
        y: this.library['dropper'].y + 20,
        delay: 1.2
      });
      TweenLite.from(this.library['nube1'], 1, {
        alpha: 0,
        y: this.library['nube1'].y + 20,
        delay: 1.4
      });
      TweenLite.from(this.library['nube2'], 1, {
        alpha: 0,
        y: this.library['nube2'].y + 20,
        delay: 1.5
      });
      return TweenLite.from(this.library['nube3'], 1, {
        alpha: 0,
        y: this.library['nube3'].y + 20,
        delay: 1.6,
        onComplete: this.playInstructions,
        onCompleteParams: [this]
      });
    };

    U1A1.prototype.initEvaluation = function(e) {
      var i, _i;
      U1A1.__super__.initEvaluation.apply(this, arguments);
      this.library['h1'].blink();
      this.blink(this.library['backNube1']);
      for (i = _i = 1; _i <= 2; i = _i += 1) {
        this.library['p' + i + 'n1'].addEventListener('drop', this.evaluateAnswer1);
      }
      return false;
    };

    U1A1.prototype.evaluateAnswer1 = function(e) {
      var i, pt, _i;
      this.answer = e.target;
      pt = this.library['h1'].globalToLocal(this.stage.mouseX, this.stage.mouseY);
      if (this.library['h1'].hitTest(pt.x, pt.y)) {
        if (this.answer.index === this.answers[this.index].w1) {
          this.answer.visible = false;
          this.library['h1'].changeText(this.answer.text.text);
          this.library['h1'].blink(false);
          this.blink(this.library['backNube1'], false);
          this.library['h2'].blink();
          this.blink(this.library['backNube2']);
          for (i = _i = 1; _i <= 4; i = _i += 1) {
            this.library['p' + i + 'n2'].addEventListener('drop', this.evaluateAnswer2);
          }
          return false;
        } else {
          this.warning();
          return this.answer.returnToPlace();
        }
      } else {
        return this.answer.returnToPlace();
      }
    };

    U1A1.prototype.evaluateAnswer2 = function(e) {
      var i, pt, _i, _results;
      this.answer = e.target;
      pt = this.library['h2'].globalToLocal(this.stage.mouseX, this.stage.mouseY);
      if (this.library['h2'].hitTest(pt.x, pt.y)) {
        if (this.answer.index === this.answers[this.index].w2) {
          this.answer.visible = false;
          this.library['h2'].changeText(this.answer.text.text);
          this.library['h2'].blink(false);
          this.blink(this.library['backNube2'], false);
          this.library['h3'].blink();
          this.blink(this.library['backNube3']);
          _results = [];
          for (i = _i = 1; _i <= 5; i = _i += 1) {
            _results.push(this.library['p' + i + 'n3'].addEventListener('drop', this.evaluateAnswer3));
          }
          return _results;
        } else {
          this.warning();
          return this.answer.returnToPlace();
        }
      } else {
        return this.answer.returnToPlace();
      }
    };

    U1A1.prototype.evaluateAnswer3 = function(e) {
      var pt;
      this.answer = e.target;
      pt = this.library['h3'].globalToLocal(this.stage.mouseX, this.stage.mouseY);
      if (this.library['h3'].hitTest(pt.x, pt.y)) {
        if (this.answer.index === this.answers[this.index].w3) {
          this.answer.visible = false;
          this.library['h3'].changeText(this.answer.text.text);
          this.library['h3'].blink(false);
          this.blink(this.library['backNube3'], false);
          return setTimeout(this.finishEvaluation, 1 * 1000);
        } else {
          this.warning();
          return this.answer.returnToPlace();
        }
      } else {
        return this.answer.returnToPlace();
      }
    };

    U1A1.prototype.finishEvaluation = function() {
      var song;
      this.library['score'].plusOne();
      song = createjs.Sound.play(this.answers[this.index].sound);
      return song.addEventListener('complete', this.clearEvaluation);
    };

    U1A1.prototype.clearEvaluation = function(e) {
      var i, _i, _j, _k, _l, _results;
      for (i = _i = 1; _i <= 2; i = _i += 1) {
        this.library['p' + i + 'n1'].visible = true;
        this.library['p' + i + 'n1'].returnToPlace();
      }
      for (i = _j = 1; _j <= 4; i = _j += 1) {
        this.library['p' + i + 'n2'].visible = true;
        this.library['p' + i + 'n2'].returnToPlace();
      }
      for (i = _k = 1; _k <= 5; i = _k += 1) {
        this.library['p' + i + 'n3'].visible = true;
        this.library['p' + i + 'n3'].returnToPlace();
      }
      _results = [];
      for (i = _l = 1; _l <= 3; i = _l += 1) {
        _results.push(this.library['h' + i].changeText(''));
      }
      return _results;
    };

    U1A1.prototype.nextEvaluation = function() {
      var i, _i, _results;
      this.index++;
      if (this.index < this.answers.length) {
        this.library['h1'].blink();
        this.blink(this.library['backNube1']);
        _results = [];
        for (i = _i = 1; _i <= 2; i = _i += 1) {
          _results.push(this.library['p' + i + 'n1'].addEventListener('drop', this.evaluateAnswer1));
        }
        return _results;
      } else {
        return this.finish();
      }
    };

    U1A1.prototype.blink = function(obj, state) {
      if (state == null) {
        state = true;
      }
      TweenMax.killTweensOf(obj);
      obj.alpha = 1;
      if (state) {
        return TweenMax.to(obj, 0.5, {
          alpha: .5,
          repeat: -1,
          yoyo: true
        });
      }
    };

    U1A1.prototype.finish = function() {
      return U1A1.__super__.finish.apply(this, arguments);
    };

    window.U1A1 = U1A1;

    return U1A1;

  })(Oda);

}).call(this);

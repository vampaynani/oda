// Generated by CoffeeScript 1.6.3
(function() {
  var U8A2,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  U8A2 = (function(_super) {
    __extends(U8A2, _super);

    function U8A2() {
      this.nextEvaluation = __bind(this.nextEvaluation, this);
      this.clearEvaluation = __bind(this.clearEvaluation, this);
      this.finishEvaluation = __bind(this.finishEvaluation, this);
      this.evaluateAnswer = __bind(this.evaluateAnswer, this);
      this.initEvaluation = __bind(this.initEvaluation, this);
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca1.png'
        }, {
          id: 'inst',
          src: 'inst.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'repeatbtn',
          src: 'repeat-btn.png'
        }, {
          id: 'playagain',
          src: 'play_again.png'
        }, {
          id: 'startgame',
          src: 'start_game.png'
        }, {
          id: 'scene1',
          src: 'btn_powhatan.png'
        }, {
          id: 'scene2',
          src: 'btn_alaska.png'
        }, {
          id: 'n1',
          src: 'tag_verb.png'
        }, {
          id: 'n2',
          src: 'tag_pronoun.png'
        }, {
          id: 'btnnoWas',
          src: 'bt_noWas.png'
        }, {
          id: 'btnnoWere',
          src: 'bt_noWere.png'
        }, {
          id: 'btnyesWas',
          src: 'bt_yesWas.png'
        }, {
          id: 'btnyesWere',
          src: 'bt_yesWere.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/good.mp3',
          id: 'good'
        }, {
          src: 'sounds/TU2_U8_A2_instructions.mp3',
          id: 'instructions'
        }, {
          src: 'sounds/wrong.mp3',
          id: 'wrong'
        }
      ];
      this.game = {
        common: [
          {
            id: 'btnyesWas',
            x: 0,
            y: 0
          }, {
            id: 'btnyesWere',
            x: 1,
            y: 0
          }, {
            id: 'btnnoWas',
            x: 0,
            y: 1
          }, {
            id: 'btnnoWere',
            x: 1,
            y: 1
          }
        ],
        scenes: [
          {
            steps: [
              {
                pattern: ['#wc', 'there ', '#wc', ' village?'],
                targets: ['Was', 'a'],
                a: 'yesWas'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' trees?'],
                targets: ['Were', 'any'],
                a: 'yesWere'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' fish?'],
                targets: ['Were', 'any'],
                a: 'yesWere'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' lot of noise?'],
                targets: ['Was', 'a'],
                a: 'noWas'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' igloos?'],
                targets: ['Were', 'any'],
                a: 'noWere'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' deer?'],
                targets: ['Were', 'any'],
                a: 'yesWere'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' city?'],
                targets: ['Was', 'a'],
                a: 'noWas'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' cars?'],
                targets: ['Were', 'any'],
                a: 'noWere'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' clean water?'],
                targets: ['Was', 'any'],
                a: 'yesWas'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' canoes?'],
                targets: ['Were', 'any'],
                a: 'yesWere'
              }
            ],
            opt1: [
              {
                i: 1,
                t: 'Was',
                x: 60,
                y: 15
              }, {
                i: 2,
                t: 'Were',
                x: 25,
                y: 40
              }
            ],
            opt2: [
              {
                i: 1,
                t: 'a',
                x: 46,
                y: 20
              }, {
                i: 2,
                t: 'any',
                x: 35,
                y: 45
              }
            ]
          }, {
            steps: [
              {
                pattern: ['#wc', 'there ', '#wc', ' seals?'],
                targets: ['Were', 'any'],
                a: 'yesWere'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' wigwams?'],
                targets: ['Were', 'any'],
                a: 'noWere'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' garbage dump?'],
                targets: ['Was', 'a'],
                a: 'noWas'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' railroad?'],
                targets: ['Was', 'a'],
                a: 'noWas'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' igloos?'],
                targets: ['Were', 'a'],
                a: 'yesWere'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' foxes?'],
                targets: ['Were', 'any'],
                a: 'yesWere'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' snow?'],
                targets: ['Was', 'any'],
                a: 'yesWas'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' owls?'],
                targets: ['Were', 'any'],
                a: 'yesWere'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' children?'],
                targets: ['Were', 'any'],
                a: 'yesWere'
              }, {
                pattern: ['#wc', 'there ', '#wc', ' air pollution?'],
                targets: ['Was', 'any'],
                a: 'noWas'
              }
            ],
            opt1: [
              {
                i: 1,
                t: 'Was',
                x: 25,
                y: 35
              }, {
                i: 2,
                t: 'Were',
                x: 70,
                y: 70
              }
            ],
            opt2: [
              {
                i: 1,
                t: 'a',
                x: 26,
                y: 20
              }, {
                i: 2,
                t: 'any',
                x: 50,
                y: 72
              }
            ]
          }
        ]
      };
      U8A2.__super__.constructor.call(this, null, manifest, sounds);
    }

    U8A2.prototype.setStage = function() {
      U8A2.__super__.setStage.apply(this, arguments);
      this.escena = 1;
      this.insertBitmap('header', 'head', stageSize.w / 2, 0, 'tc');
      this.insertInstructions('instructions', 'Click on one of the pictures. Drag the words to make a question. Then click on the answer.', 40, 100);
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, 20, 0));
      return this.setScene(1).setDropper(1).setNube1().setNube2().setBtn().introEvaluation();
    };

    U8A2.prototype.setScene = function(scene) {
      this.scene = this.game.scenes[scene - 1];
      this.intento = 0;
      this.sc = this.createBitmap("scene", "scene" + scene, 120, 150);
      this.addToMain(this.sc);
      return this;
    };

    U8A2.prototype.setDropper = function(step) {
      var dropper, h, i, npos, t, txt, _i, _len, _ref;
      this.step = step;
      if (this.library.dropper) {
        dropper = this.library.dropper;
      } else {
        dropper = new createjs.Container();
        dropper.name = 'dropper';
        this.addToMain(dropper);
      }
      dropper.removeAllChildren();
      i = 0;
      npos = 0;
      _ref = this.scene.steps[step - 1].pattern;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        t = _ref[_i];
        if (t === '#wc') {
          txt = this.scene.steps[step - 1].targets[i];
          h = new WordContainer("h" + i, '', '#FFF', '#F00', npos, 5);
          h.index = i;
          dropper.addChild(h);
          this.addToLibrary(h);
          npos += h.width + 10;
          i++;
        } else {
          h = this.createText('', t, '24px Quicksand', '#333', npos, 0);
          dropper.addChild(h);
          npos += h.getMeasuredWidth() + 20;
        }
      }
      dropper.x = npos / 2;
      dropper.y = 380;
      return this;
    };

    U8A2.prototype.setNube1 = function() {
      var back, container, d, opt, _i, _len, _ref;
      container = new createjs.Container();
      container.x = 600;
      container.y = 180;
      container.name = 'nube1';
      container.removeAllChildren();
      back = this.createBitmap('backNube1', 'n1', 0, 0);
      container.addChild(back);
      _ref = this.scene.opt1;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        opt = _ref[_i];
        d = new DroppableText("n1d" + opt.i, opt.t, opt.t, opt.x, opt.y, this.stage);
        container.addChild(d);
        this.addToLibrary(d);
      }
      this.addToMain(container);
      return this;
    };

    U8A2.prototype.setNube2 = function() {
      var back, container, d, opt, _i, _len, _ref;
      container = new createjs.Container();
      container.x = 600;
      container.y = 280;
      container.name = 'nube2';
      container.removeAllChildren();
      back = this.createBitmap('backNube2', 'n2', 0, 0);
      container.addChild(back);
      _ref = this.scene.opt2;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        opt = _ref[_i];
        d = new DroppableText("n2d" + opt.i, opt.t, opt.t, opt.x, opt.y, this.stage);
        container.addChild(d);
        this.addToLibrary(d);
      }
      this.addToMain(container);
      return this;
    };

    U8A2.prototype.setBtn = function() {
      var a, container, i, _i;
      container = new createjs.Container();
      container.x = 160;
      container.y = 450;
      container.name = 'btns';
      for (i = _i = 0; _i <= 3; i = ++_i) {
        a = this.createBitmap(this.game.common[i].id, this.game.common[i].id, this.game.common[i].x * 260, this.game.common[i].y * 60);
        container.addChild(a);
      }
      this.addToMain(container);
      return this;
    };

    U8A2.prototype.introEvaluation = function() {
      U8A2.__super__.introEvaluation.apply(this, arguments);
      TweenLite.from(this.library.header, 1, {
        y: -this.library.header.height
      });
      TweenLite.from(this.library.instructions, 1, {
        alpha: 0,
        x: 0,
        delay: 0.5
      });
      TweenLite.from(this.library.scene, 1, {
        alpha: 0,
        y: this.library.scene.y + 20,
        delay: 1
      });
      TweenLite.from(this.library.dropper, 1, {
        alpha: 0,
        y: this.library.dropper.y + 20,
        delay: 1
      });
      TweenLite.from(this.library.nube1, 1, {
        alpha: 0,
        y: this.library.nube1.y + 20,
        delay: 1.5
      });
      TweenLite.from(this.library.btns, 1, {
        alpha: 0,
        y: this.library.btns.y + 20,
        delay: 1.5
      });
      return TweenLite.from(this.library.nube2, 1, {
        alpha: 0,
        y: this.library.nube2.y + 20,
        delay: 1.5,
        onComplete: this.playInstructions,
        onCompleteParams: [this]
      });
    };

    U8A2.prototype.initEvaluation = function(e) {
      var opt, _i, _j, _len, _len1, _ref, _ref1, _results;
      U8A2.__super__.initEvaluation.apply(this, arguments);
      _ref = this.scene.opt1;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        opt = _ref[_i];
        this.library["n1d" + opt.i].updateDrops(this.library.h0);
        this.library["n1d" + opt.i].addEventListener('dropped', this.evaluateAnswer);
        this.library["n1d" + opt.i].initDragListener();
      }
      _ref1 = this.scene.opt2;
      _results = [];
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        opt = _ref1[_j];
        this.library["n2d" + opt.i].updateDrops(this.library.h1);
        this.library["n2d" + opt.i].addEventListener('dropped', this.evaluateAnswer);
        _results.push(this.library["n2d" + opt.i].initDragListener());
      }
      return _results;
    };

    U8A2.prototype.evaluateAnswer = function(e) {
      this.answer = e.target;
      this.drop = e.drop;
      if (this.answer.index === this.scene.steps[this.step - 1].targets[this.drop.index]) {
        this.answer.visible = false;
        this.drop.changeText(this.answer.index);
        if (this.intento === 0) {
          this.library['score'].plusOne();
        }
        this.intento = 0;
        createjs.Sound.play('good');
        return this.finishEvaluation();
      } else {
        this.warning();
        this.intento = 1;
        return this.answer.returnToPlace();
      }
    };

    U8A2.prototype.finishEvaluation = function() {
      if (this.library.h0.text.text === '' || this.library.h1.text.text === '') {
        return;
      }
      return setTimeout(this.clearEvaluation, 1 * 1000);
    };

    U8A2.prototype.clearEvaluation = function(e) {
      var opt, _i, _j, _len, _len1, _ref, _ref1;
      _ref = this.scene.opt1;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        opt = _ref[_i];
        this.library["n1d" + opt.i].visible = true;
        this.library["n1d" + opt.i].returnToPlace();
      }
      _ref1 = this.scene.opt2;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        opt = _ref1[_j];
        this.library["n2d" + opt.i].visible = true;
        this.library["n2d" + opt.i].returnToPlace();
      }
      return TweenLite.to(this.library.dropper, 0.5, {
        alpha: 0,
        y: this.library.dropper.y + 20,
        onComplete: this.nextEvaluation
      });
    };

    U8A2.prototype.nextEvaluation = function() {
      var opt, _i, _j, _len, _len1, _ref, _ref1, _results;
      this.index++;
      if (this.index < this.scene.steps.length) {
        this.setDropper(this.index + 1);
        TweenLite.to(this.library.dropper, 0.5, {
          alpha: 1,
          y: 390
        });
        _ref = this.scene.opt1;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          opt = _ref[_i];
          this.library["n1d" + opt.i].updateDrops(this.library.h0);
        }
        _ref1 = this.scene.opt2;
        _results = [];
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          opt = _ref1[_j];
          _results.push(this.library["n2d" + opt.i].updateDrops(this.library.h1));
        }
        return _results;
      } else {
        if (this.escena !== 3) {
          this.escena++;
          this.index = 0;
          this.mainContainer.removeChild(this.sc);
          TweenLite.to(this.library.nube1, 1, {
            alpha: 0,
            y: this.library.nube1.y + 20
          });
          TweenLite.to(this.library.nube2, 1, {
            alpha: 0,
            y: this.library.nube2.y + 20
          });
          this.setScene(this.escena).setDropper(1).setNube1().setNube2().initEvaluation();
          TweenLite.from(this.library.nube1, 1, {
            alpha: 0,
            y: this.library.nube1.y + 20
          });
          TweenLite.from(this.library.nube2, 1, {
            alpha: 0,
            y: this.library.nube2.y + 20
          });
          return TweenLite.to(this.library.dropper, 0.5, {
            alpha: 1,
            y: 390
          });
        } else {
          return this.finish();
        }
      }
    };

    U8A2.prototype.finish = function() {
      TweenLite.to(this.library.scene, 1, {
        alpha: 0,
        y: this.library.scene.y + 20
      });
      TweenLite.to(this.library.nube1, 1, {
        alpha: 0,
        y: this.library.nube1.y + 20
      });
      TweenLite.to(this.library.nube2, 1, {
        alpha: 0,
        y: this.library.nube2.y + 20
      });
      TweenLite.to(this.library.dropper, 0.5, {
        alpha: 0,
        y: 390
      });
      TweenLite.to(this.library.btns, 1, {
        alpha: 0,
        y: this.library.btns.y + 20
      });
      return U8A2.__super__.finish.apply(this, arguments);
    };

    window.U8A2 = U8A2;

    return U8A2;

  })(Oda);

}).call(this);

// Generated by CoffeeScript 1.6.3
(function() {
  var U8A4,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  U8A4 = (function(_super) {
    __extends(U8A4, _super);

    function U8A4() {
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca1.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'playagain',
          src: 'play_again.png'
        }, {
          id: 'startgame',
          src: 'start_game.png'
        }, {
          id: 'tara',
          src: 'tara_1.png'
        }, {
          id: 'dragblepainting',
          src: 'dragble_painting.png'
        }, {
          id: 'dragblewaterpark',
          src: 'dragble_waterpark.png'
        }, {
          id: 'dragbleicecream',
          src: 'dragble_icecream.png'
        }, {
          id: 'dragblepool',
          src: 'dragble_pool.png'
        }, {
          id: 'dragbleseashells',
          src: 'dragble_seashells.png'
        }, {
          id: 'tyler',
          src: 'tyler_1.png'
        }, {
          id: 'dragbledolphins',
          src: 'dragble_dolphins.png'
        }, {
          id: 'dragbleboooks',
          src: 'dragble_boooks.png'
        }, {
          id: 'dragblesandcastles',
          src: 'dragble_sandcastles.png'
        }, {
          id: 'dragblebike',
          src: 'dragble_bike.png'
        }, {
          id: 'dragblefishing',
          src: 'dragble_fishing.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/good.mp3',
          id: 'good'
        }, {
          src: 'sounds/boing.mp3',
          id: 'boing'
        }, {
          src: 'sounds/TU3_U8_A4_instructions.mp3',
          id: 'instructions'
        }, {
          src: 'sounds/wrong.mp3',
          id: 'wrong'
        }
      ];
      this.game = [
        {
          personaje: 'tyler',
          words: [
            {
              palabra: 'after that',
              img: 'dragbledolphins'
            }, {
              palabra: 'then',
              img: 'dragblesandcastles'
            }, {
              palabra: 'first',
              img: 'dragblefishing'
            }, {
              palabra: 'finally',
              mg: 'dragbleboooks'
            }, {
              palabra: 'next',
              img: 'dragblebike'
            }
          ]
        }, {
          personaje: 'tara',
          words: [
            {
              palabra: 'finally',
              img: 'dragbleicecream'
            }, {
              palabra: 'next',
              img: 'dragblepainting'
            }, {
              palabra: 'then',
              img: 'dragblepool'
            }, {
              palabra: 'first',
              img: 'dragbleseashells'
            }, {
              palabra: 'after that',
              img: 'dragblewaterpark'
            }
          ]
        }
      ];
      U8A4.__super__.constructor.call(this, null, manifest, sounds);
    }

    U8A4.prototype.setStage = function() {
      U8A4.__super__.setStage.apply(this, arguments);
      this.insertBitmap('header', 'head', stageSize.w / 2, 0, 'tc');
      this.insertInstructions('instructions', 'Look, read and click on the correct options.', 40, 100);
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, 20, 0));
      return this.setKid(2);
    };

    U8A4.prototype.setKid = function(kid) {
      var equis, i, m, p, w, _i, _j;
      this.kid = this.game[kid - 1];
      kid = new createjs.Container();
      kid.y = 130;
      kid.x = 50;
      m = this.createBitmap(this.kid.personaje, this.kid.personaje, 0, 30);
      kid.addChild(m);
      equis = 150;
      for (i = _i = 1; _i <= 5; i = ++_i) {
        w = new DraggableText("w" + i, this.kid.words[i - 1].palabra, 1, equis, 5);
        w.text.font = '20px Quicksand';
        equis = equis + w.text.getMeasuredWidth() + 42;
        kid.addChild(w);
      }
      for (i = _j = 0; _j <= 4; i = ++_j) {
        p = this.createBitmap("p" + (i + 1), this.kid.words[i].img, (i * 120) + 50, 210);
        if (i === 1 || i === 3) {
          p.y = 270;
        }
        kid.addChild(p);
      }
      return this.addToMain(kid);
    };

    window.U8A4 = U8A4;

    return U8A4;

  })(Oda);

}).call(this);

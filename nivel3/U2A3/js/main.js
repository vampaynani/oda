// Generated by CoffeeScript 1.6.3
(function() {
  var ContainerFactory, LabelContainer, U2A3,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ContainerFactory = (function() {
    function ContainerFactory() {}

    ContainerFactory.prototype.makeContainer = function(opts) {
      switch (opts.type) {
        case 'label':
          return new LabelContainer(opts);
      }
    };

    return ContainerFactory;

  })();

  LabelContainer = (function() {
    LabelContainer.prototype = new createjs.Container();

    LabelContainer.prototype.Container_initialize = LabelContainer.prototype.initialize;

    LabelContainer.prototype.initialize = function(opts) {
      var _ref;
      this.Container_initialize();
      this.name = opts.name;
      this.x = opts.x;
      this.y = opts.y;
      this.text = new createjs.Text(opts.text, opts.font, opts.color);
      this.text.name = opts.name;
      this.text.textAlign = (_ref = opts.align) != null ? _ref : 'left';
      this.addChild(this.text);
      return this.text;
    };

    function LabelContainer(opts) {
      this.initialize(opts);
    }

    LabelContainer.prototype.update = function(txt) {
      this.text.text = txt;
      if (this.text.alpha === 0) {
        return TweenLite.to(this.text, 0.5, {
          alpha: 1,
          y: 0
        });
      } else {
        return TweenLite.from(this.text, 0.5, {
          alpha: 0,
          y: this.text.y + 20
        });
      }
    };

    LabelContainer.prototype["delete"] = function() {
      return TweenLite.to(this.text, 0.5, {
        alpha: 0,
        y: this.text.y + 20
      });
    };

    return LabelContainer;

  })();

  U2A3 = (function(_super) {
    __extends(U2A3, _super);

    function U2A3() {
      this.checkPrice = __bind(this.checkPrice, this);
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca1.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'letraM',
          src: 'letra_M.png'
        }, {
          id: 'letraU',
          src: 'letra_U.png'
        }, {
          id: 'letraS',
          src: 'letra_S.png'
        }, {
          id: 'letraH',
          src: 'letra_H.png'
        }, {
          id: 'letraR',
          src: 'letra_R.png'
        }, {
          id: 'letraO',
          src: 'letra_O.png'
        }, {
          id: 'mush',
          src: 'mush.png'
        }, {
          id: 'priceblueberryJam',
          src: 'price_blueberryJam.png'
        }, {
          id: 'pricebutter',
          src: 'price_butter.png'
        }, {
          id: 'pricecarrots',
          src: 'price_carrots.png'
        }, {
          id: 'pricechilis',
          src: 'price_chilis.png'
        }, {
          id: 'pricecream',
          src: 'price_cream.png'
        }, {
          id: 'priceeggs',
          src: 'price_eggs.png'
        }, {
          id: 'pricemushrooms',
          src: 'price_mushrooms.png'
        }, {
          id: 'pricepeachJam',
          src: 'price_peachJam.png'
        }, {
          id: 'pricepeppers',
          src: 'price_peppers.png'
        }, {
          id: 'propabuelita',
          src: 'prop_abuelita.png'
        }, {
          id: 'propbg',
          src: 'prop_bg.png'
        }, {
          id: 'clue',
          src: 'text_clue.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/good.mp3',
          id: 'good'
        }, {
          src: 'sounds/TU3_U2_A3_Instructions.mp3',
          id: 'instructions'
        }, {
          src: 'sounds/TU3_U2_A3_Instructions2.mp3',
          id: 'instructions2'
        }, {
          src: 'sounds/wrong.mp3',
          id: 'wrong'
        }
      ];
      this.game = {
        header: 'head',
        scenes: [
          {
            instructions: 'Read the price and click on the correct item.',
            container: {
              name: 'market'
            },
            background: {
              name: 'propbg',
              x: 426,
              y: 308,
              align: 'mc'
            },
            components: {
              texts: [],
              images: [
                {
                  imgId: 'letraM',
                  x: 501,
                  y: 407,
                  align: 'mc'
                }, {
                  imgId: 'letraU',
                  x: 324,
                  y: 408,
                  align: 'mc'
                }, {
                  imgId: 'letraS',
                  x: 563,
                  y: 323,
                  align: 'mc'
                }, {
                  imgId: 'letraH',
                  x: 303,
                  y: 317,
                  align: 'mc'
                }, {
                  imgId: 'letraR',
                  x: 314,
                  y: 213,
                  align: 'mc'
                }, {
                  imgId: 'letraO',
                  x: 374,
                  y: 316,
                  align: 'mc'
                }, {
                  name: 'letraO2',
                  imgId: 'letraO',
                  x: 454,
                  y: 316,
                  align: 'mc'
                }, {
                  name: 'letraM2',
                  imgId: 'letraM',
                  x: 576,
                  y: 163,
                  align: 'mc'
                }, {
                  name: 'letraS2',
                  imgId: 'letraS',
                  x: 389,
                  y: 257,
                  align: 'mc'
                }, {
                  name: 'abuelita',
                  imgId: 'propabuelita',
                  x: 554,
                  y: 254,
                  align: 'mc',
                  index: 15
                }
              ],
              containers: [
                {
                  type: 'label',
                  name: 'answerlbl',
                  text: '',
                  font: '15px Quicksand',
                  color: '#333',
                  x: 415,
                  y: 530,
                  align: 'center'
                }
              ],
              buttons: [
                {
                  imgId: 'priceblueberryJam',
                  x: 521,
                  y: 404,
                  align: 'mc',
                  index: 'blueberry',
                  action: 'checkPrice'
                }, {
                  imgId: 'pricebutter',
                  x: 350,
                  y: 218,
                  align: 'mc',
                  index: 'butter',
                  action: 'checkPrice'
                }, {
                  imgId: 'pricecarrots',
                  x: 584,
                  y: 314,
                  align: 'mc',
                  index: 'carrots',
                  action: 'checkPrice'
                }, {
                  imgId: 'pricechilis',
                  x: 580,
                  y: 176,
                  align: 'mc',
                  index: 'chilis',
                  action: 'checkPrice'
                }, {
                  imgId: 'pricecream',
                  x: 416,
                  y: 253,
                  align: 'mc',
                  index: 'cream',
                  action: 'checkPrice'
                }, {
                  imgId: 'priceeggs',
                  x: 322,
                  y: 315,
                  align: 'mc',
                  index: 'eggs',
                  action: 'checkPrice'
                }, {
                  imgId: 'pricemushrooms',
                  x: 397,
                  y: 320,
                  align: 'mc',
                  index: 'mushrooms',
                  action: 'checkPrice'
                }, {
                  imgId: 'pricepeachJam',
                  x: 347,
                  y: 406,
                  align: 'mc',
                  index: 'peach',
                  action: 'checkPrice'
                }, {
                  imgId: 'pricepeppers',
                  x: 477,
                  y: 313,
                  align: 'mc',
                  index: 'peppers',
                  action: 'checkPrice'
                }
              ],
              drags: [],
              targets: []
            },
            steps: [
              {
                type: 'txt',
                text: 'It\'s three dollars and ten cents.',
                success: 'peach',
                show: 'letraU'
              }, {
                type: 'txt',
                text: 'They\'re three dollars a kilo.',
                success: 'carrots',
                show: 'letraS'
              }, {
                type: 'txt',
                text: 'It\'s ninety-five cents.',
                success: 'cream',
                show: 'letraS2'
              }, {
                type: 'txt',
                text: 'It\'s one dollar and fifty cents.',
                success: 'butter',
                show: 'letraR'
              }, {
                type: 'txt',
                text: 'They\'re two dollars and seventy-five cents.',
                success: 'chilis',
                show: 'letraM2'
              }, {
                type: 'txt',
                text: 'They\'re two dollars and forty cents a kilo.',
                success: 'peppers',
                show: 'letraO2'
              }, {
                type: 'txt',
                text: 'They\'re two dollars and seventy-five cents a kilo.',
                success: 'eggs',
                show: 'letraH'
              }, {
                type: 'txt',
                text: 'It\'s four dollars and fifty cents.',
                success: 'blueberry',
                show: 'letraM'
              }, {
                type: 'txt',
                text: 'They\'re four dollars and five cents a kilo.',
                success: 'mushrooms',
                show: 'letraO'
              }
            ]
          }, {
            instructions: 'Read the price and click on the correct item.',
            container: {
              name: 'market'
            },
            background: {
              name: 'propbg',
              x: 426,
              y: 308,
              align: 'mc'
            },
            components: {
              texts: [],
              images: [
                {
                  name: 'abuelita',
                  imgId: 'propabuelita',
                  x: 554,
                  y: 254,
                  align: 'mc',
                  index: 15
                }
              ],
              containers: [],
              buttons: [],
              drags: [
                {
                  type: 'img',
                  imgId: 'letraM',
                  x: 501,
                  y: 407,
                  align: 'mc'
                }, {
                  type: 'img',
                  imgId: 'letraU',
                  x: 324,
                  y: 408,
                  align: 'mc'
                }, {
                  type: 'img',
                  imgId: 'letraS',
                  x: 563,
                  y: 323,
                  align: 'mc'
                }, {
                  type: 'img',
                  imgId: 'letraH',
                  x: 303,
                  y: 317,
                  align: 'mc'
                }, {
                  type: 'img',
                  imgId: 'letraR',
                  x: 314,
                  y: 213,
                  align: 'mc'
                }, {
                  type: 'img',
                  imgId: 'letraO',
                  x: 374,
                  y: 316,
                  align: 'mc'
                }, {
                  type: 'img',
                  name: 'letraO2',
                  imgId: 'letraO',
                  x: 454,
                  y: 316,
                  align: 'mc'
                }, {
                  type: 'img',
                  name: 'letraM2',
                  imgId: 'letraM',
                  x: 576,
                  y: 163,
                  align: 'mc'
                }, {
                  type: 'img',
                  name: 'letraS2',
                  imgId: 'letraS',
                  x: 389,
                  y: 257,
                  align: 'mc'
                }
              ],
              targets: []
            },
            steps: [
              {
                type: 'word',
                text: 'mushrooms'
              }
            ]
          }
        ]
      };
      U2A3.__super__.constructor.call(this, null, manifest, sounds);
    }

    U2A3.prototype.setStage = function() {
      var i, totalScore, _i, _ref;
      U2A3.__super__.setStage.apply(this, arguments);
      this.scene = 0;
      totalScore = 0;
      for (i = _i = 0, _ref = this.game.scenes.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        totalScore += this.game.scenes[i].steps.length;
      }
      this.insertBitmap('header', this.game.header, stageSize.w / 2, 0, 'tc');
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, totalScore, 0));
      return this.setScene().hideLetters().introEvaluation();
    };

    U2A3.prototype.setScene = function() {
      var align, b, bga, bgname, bgx, bgy, button, c, cname, co, container, currentScene, d, drag, factory, image, name, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _m, _ref, _ref1, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;
      currentScene = this.game.scenes[this.scene];
      cname = (_ref = currentScene.container.name) != null ? _ref : 'currentContainer';
      if (this.library[cname]) {
        c = this.library[cname];
      } else {
        c = new createjs.Container();
        this.addToMain(c);
      }
      c.name = cname;
      c.x = (_ref1 = currentScene.container.x) != null ? _ref1 : 0;
      c.y = (_ref2 = currentScene.container.y) != null ? _ref2 : 0;
      c.removeAllChildren();
      bgname = (_ref3 = currentScene.background.name) != null ? _ref3 : 'background';
      bgx = (_ref4 = currentScene.background.x) != null ? _ref4 : 0;
      bgy = (_ref5 = currentScene.background.y) != null ? _ref5 : 0;
      bga = (_ref6 = currentScene.background.align) != null ? _ref6 : '';
      b = this.createBitmap(bgname, bgname, bgx, bgy, bga);
      c.addChild(b);
      _ref7 = currentScene.components.images;
      for (_i = 0, _len = _ref7.length; _i < _len; _i++) {
        image = _ref7[_i];
        align = (_ref8 = image.align) != null ? _ref8 : '';
        name = (_ref9 = image.name) != null ? _ref9 : image.imgId;
        b = this.createBitmap(name, image.imgId, image.x, image.y, align);
        c.addChild(b);
        this.addToLibrary(b);
      }
      factory = new ContainerFactory();
      _ref10 = currentScene.components.containers;
      for (_j = 0, _len1 = _ref10.length; _j < _len1; _j++) {
        container = _ref10[_j];
        co = factory.makeContainer(container);
        c.addChild(co);
        this.addToLibrary(co);
      }
      _ref11 = currentScene.components.buttons;
      for (_k = 0, _len2 = _ref11.length; _k < _len2; _k++) {
        button = _ref11[_k];
        align = (_ref12 = button.align) != null ? _ref12 : '';
        name = (_ref13 = button.name) != null ? _ref13 : button.imgId;
        b = this.createBitmap(name, button.imgId, button.x, button.y, align);
        b.index = button.index;
        b.addEventListener('click', this[button.action]);
        c.addChild(b);
        this.addToLibrary(b);
      }
      _ref14 = currentScene.components.drags;
      for (_l = 0, _len3 = _ref14.length; _l < _len3; _l++) {
        drag = _ref14[_l];
        name = (_ref15 = drag.name) != null ? _ref15 : drag.imgId;
        d = new Droppable(name, this.preload.getResult(drag.imgId), drag.index, drag.x, drag.y, this.stage);
        this.setReg(d, d.width / 2, d.height / 2);
        d.addEventListener('click', this[drag.action]);
        c.addChild(d);
        this.addToLibrary(d);
      }
      _ref16 = currentScene.components.images;
      for (_m = 0, _len4 = _ref16.length; _m < _len4; _m++) {
        image = _ref16[_m];
        if (image.index) {
          this.library[image.name].parent.setChildIndex(this.library[image.name], image.index);
        }
      }
      this.insertInstructions('instructions', this.game.scenes[this.scene].instructions, 40, 100);
      return this;
    };

    U2A3.prototype.hideLetters = function() {
      var letra, letras, _i, _len;
      letras = ['letraM', 'letraU', 'letraS', 'letraH', 'letraR', 'letraO', 'letraO2', 'letraM2', 'letraS2'];
      for (_i = 0, _len = letras.length; _i < _len; _i++) {
        letra = letras[_i];
        this.library[letra].visible = false;
      }
      return this;
    };

    U2A3.prototype.introEvaluation = function() {
      U2A3.__super__.introEvaluation.apply(this, arguments);
      TweenLite.from(this.library.header, 1, {
        y: -this.library.header.height
      });
      TweenLite.from(this.library.instructions, 1, {
        alpha: 0,
        x: 0,
        delay: 0.5
      });
      return TweenLite.from(this.library[this.game.scenes[this.scene].container.name], 1, {
        alpha: 0,
        delay: 1,
        onComplete: this.playInstructions,
        onCompleteParams: [this]
      });
    };

    U2A3.prototype.initEvaluation = function() {
      var currentStep;
      U2A3.__super__.initEvaluation.apply(this, arguments);
      if (this.game.scenes[this.scene].steps.length > 0) {
        currentStep = this.game.scenes[this.scene].steps[this.index];
        return this.library.answerlbl.update(currentStep.text);
      }
    };

    U2A3.prototype.checkPrice = function(e) {
      var currentAnswer;
      currentAnswer = this.game.scenes[this.scene].steps[this.index];
      if (e.target.index === currentAnswer.success) {
        this.library.score.plusOne();
      } else {
        this.warning();
      }
      this.library[currentAnswer.show].visible = true;
      TweenLite.to(e.target, 0.5, {
        alpha: 0
      });
      return this.nextStep();
    };

    U2A3.prototype.nextStep = function() {
      var currentStep;
      this.index++;
      if (this.index < this.game.scenes[this.scene].steps.length) {
        currentStep = this.game.scenes[this.scene].steps[this.index];
        return this.library.answerlbl.update(currentStep.text);
      } else {
        return this.nextScene();
      }
    };

    U2A3.prototype.nextScene = function() {
      this.scene++;
      if (this.scene < this.game.scenes.length) {
        return this.setScene(this.scene);
      }
    };

    /*
    	setStage: ->
    		super
    		console.log window['createjs']['Bitmap']
    		@insertBitmap 'header', 'head', stageSize.w / 2, 0, 'tc'
    		@insertInstructions 'instructions', 'Listen and drag the clocks to the correct pictures.', 40, 100
    		@addToMain new Score 'score', (@preload.getResult 'c1'), (@preload.getResult 'c2'), 20, 500, 5, 0
    		@setMarket().setFrase().setDrags().setQuestion().setFinal().introEvaluation()
    	setMarket: ->
    		tienda = new createjs.Container()
    		tienda.x = 0
    		tienda.y = 0
    		back = @createBitmap 'propbg','propbg', 426, 308, 'mc'
    		blueberry = @createBitmap 'priceblueberryJam', 'priceblueberryJam', 521, 404, 'mc'
    		butter = @createBitmap 'pricebutter', 'pricebutter', 350, 218, 'mc'
    		carrots = @createBitmap 'pricecarrots', 'pricecarrots', 584, 314, 'mc'
    		chilis = @createBitmap 'pricechilis', 'pricechilis', 580, 176, 'mc'
    		cream = @createBitmap 'pricecream', 'pricecream', 416, 253, 'mc'
    		eggs = @createBitmap 'priceeggs', 'priceeggs', 322, 315, 'mc'
    		mushrooms = @createBitmap 'pricemushrooms', 'pricemushrooms', 397, 320, 'mc'
    		peach = @createBitmap 'pricepeachJam', 'pricepeachJam', 347, 406, 'mc'
    		peppers = @createBitmap 'pricepeppers', 'pricepeppers', 477, 313, 'mc'
    		abuelita = @createBitmap 'propabuelita', 'propabuelita', 554, 254, 'mc'
    		tienda.addChild back, blueberry, butter, chilis, cream, eggs, mushrooms, peach, abuelita, carrots, peppers
    		@addToMain tienda
    		@
    	setFrase: ->
    		precio = new createjs.Text 'texto del precio', '20px Arial', '#333333'
    		precio.x = stageSize.w / 2
    		precio.y = 500
    		precio.textAlign = 'center'
    		@addToMain precio
    		@	
    	setDrags: ->
    		letrablueberry = new Draggable 'letraM', (@preload.getResult 'letraM'), 0, 501, 407
    		letrapeach = new Draggable 'letraU', (@preload.getResult 'letraU'), 1, 324, 408
    		letracarrots = new Draggable 'letraS', (@preload.getResult 'letraS'), 2, 563, 323
    		letraeggs = new Draggable 'letraH', (@preload.getResult 'letraH'), 3, 303, 317
    		letrabutter = new Draggable 'letraR', (@preload.getResult 'letraR'), 4, 314, 213
    		letramushrooms = new Draggable 'letraO', (@preload.getResult 'letraO'), 5, 374, 316
    		letrapeppers = new Draggable 'letraO', (@preload.getResult 'letraO'), 6, 454, 316
    		letrachilis = new Draggable 'letraM', (@preload.getResult 'letraM'), 7, 576, 163
    		letracream  = new Draggable 'letraS', (@preload.getResult 'letraS'), 8, 389, 257
    		letrablueberry.scaleX = letrapeach.scaleX = letracarrots.scaleX = letraeggs.scaleX = letrabutter.scaleX = letramushrooms.scaleX = letrapeppers.scaleX = letrachilis.scaleX = letracream.scaleX = 0.5
    		letrablueberry.scaleY = letrapeach.scaleY = letracarrots.scaleY = letraeggs.scaleY = letrabutter.scaleY = letramushrooms.scaleY = letrapeppers.scaleY = letrachilis.scaleY = letracream.scaleY = 0.5
    		@addToMain letrablueberry, letrapeach, letracarrots, letraeggs, letrabutter, letramushrooms, letrapeppers, letrachilis, letracream
    		@
    	setQuestion: ->
    		q = new createjs.Text 'What vegetables are small and white?', '20px Arial', '#333333'
    		q.x = stageSize.w / 2
    		q.y = 480
    		q.textAlign = 'center'
    		@addToMain q
    
    		palabra = new createjs.Container()
    		palabra.x = 115
    		palabra.y = 500
    
    		cuadrito = new createjs.Graphics().beginFill( '' ).drawRect( 0, 0, 47, 40 ).beginStroke( '#f00' ).moveTo( 0, 40 ).lineTo( 47, 40 );
    		for i in [1..9]
    			c = new createjs.Shape cuadrito
    			c.x = i * 55
    			palabra.addChild c
    		@addToMain palabra
    		@insertBitmap 'clue', 'clue', stageSize.w / 2, 560, 'tc'
    		@
    	setFinal: ->
    		final = new createjs.Container()
    		final.x = 140
    		final.y = 300
    		for i in [0..8]
    			if ( i % 2 == 0 )
    				le = @createBitmap @letras[i], @letras[i], i*70, 0, 'mc'
    			else le = @createBitmap @letras[i], @letras[i], i*70, 30, 'mc'
    			final.addChild le
    		@insertBitmap 'mush', 'mush', 0, 0
    		@addToMain final
    		@		
    	introEvaluation: ->
    		super
    
    		TweenLite.from @library['header'], 1, {y:-@library['header'].height}
    		TweenLite.from @library['instructions'], 1, {alpha :0, x: 0, delay: 0.5}
    	initEvaluation: (e) =>
    		super
    
    		false
    	evaluateAnswer1: (e) =>
    		@answer = e.target
    		pt = @library['h1'].globalToLocal @stage.mouseX, @stage.mouseY
    		if @library['h1'].hitTest pt.x, pt.y
    			if @answer.index is @answers[@index].w1
    				@answer.visible = false
    				@library['h1'].changeText @answer.text.text
    				@library['h1'].blink off
    				@blink @library['backNube1'], off
    				@library['h2'].blink()
    				@blink @library['backNube2']
    				for i in [1..4] by 1
    					@library['p'+i+'n2'].addEventListener 'drop', @evaluateAnswer2
    				false
    			else
    				@warning()
    				@answer.returnToPlace()
    		else
    			@answer.returnToPlace()
    	evaluateAnswer2: (e) =>
    		@answer = e.target
    		pt = @library['h2'].globalToLocal @stage.mouseX, @stage.mouseY
    		if @library['h2'].hitTest pt.x, pt.y
    			if @answer.index is @answers[@index].w2
    				@answer.visible = false
    				@library['h2'].changeText @answer.text.text
    				@library['h2'].blink off
    				@blink @library['backNube2'], off
    				@library['h3'].blink()
    				@blink @library['backNube3']
    				for i in [1..5] by 1
    					@library['p'+i+'n3'].addEventListener 'drop', @evaluateAnswer3
    			else
    				@warning()
    				@answer.returnToPlace()
    		else
    			@answer.returnToPlace()
    	evaluateAnswer3:(e) =>
    		@answer = e.target;
    		pt = @library['h3'].globalToLocal @stage.mouseX, @stage.mouseY
    		if @library['h3'].hitTest pt.x, pt.y
    			if @answer.index is @answers[@index].w3
    				@answer.visible = false
    				@library['h3'].changeText @answer.text.text
    				@library['h3'].blink off
    				@blink @library['backNube3'], off
    				setTimeout @finishEvaluation, 1 * 1000
    			else
    				@warning()
    				@answer.returnToPlace()
    		else
    			@answer.returnToPlace()
    	finishEvaluation: =>
    		@library['score'].plusOne()
    		song = createjs.Sound.play @answers[@index].sound
    		song.addEventListener 'complete', @clearEvaluation
    	clearEvaluation: (e) =>
    		for i in [1..2] by 1
    			@library['p'+i+'n1'].visible = true
    			@library['p'+i+'n1'].returnToPlace()
    		for i in [1..4] by 1
    			@library['p'+i+'n2'].visible = true
    			@library['p'+i+'n2'].returnToPlace()
    		for i in [1..5] by 1
    			@library['p'+i+'n3'].visible = true
    			@library['p'+i+'n3'].returnToPlace()
    		for i in [1..3] by 1
    			@library['h'+i].changeText ''
    		TweenLite.to @library['characters'], 0.5, {scaleX: 1.5, scaleY: 1.5, alpha: 0, ease: Back.easeOut, onComplete: @nextEvaluation}
    	nextEvaluation: =>
    		@index++
    		if @index < @answers.length
    			@library['characters'].currentFrame = @index
    			@library['h1'].blink()
    			@blink @library['backNube1']
    			TweenLite.to @library['characters'], 0.5, {scaleX: 1, scaleY: 1, alpha: 1, ease: Back.easeOut}
    			for i in [1..2] by 1
    				@library['p'+i+'n1'].addEventListener 'drop', @evaluateAnswer1
    		else
    			@finish()
    	blink: (obj, state = on) ->
    		TweenMax.killTweensOf obj
    		obj.alpha = 1
    		TweenMax.to obj, 0.5, {alpha:.5, repeat:-1, yoyo:true}  if state
    	finish: ->
    		super
    */


    window.U2A3 = U2A3;

    return U2A3;

  })(Oda);

}).call(this);

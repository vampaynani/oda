// Generated by CoffeeScript 1.6.3
(function() {
  var U1A4,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  U1A4 = (function(_super) {
    __extends(U1A4, _super);

    function U1A4() {
      this.repeatSound = __bind(this.repeatSound, this);
      this.nextEvaluation = __bind(this.nextEvaluation, this);
      this.finishEvaluation = __bind(this.finishEvaluation, this);
      this.evaluateAnswer = __bind(this.evaluateAnswer, this);
      this.initEvaluation = __bind(this.initEvaluation, this);
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca.png'
        }, {
          id: 'inst',
          src: 'texto_look.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'repeatbtn',
          src: 'repeat-btn.png'
        }, {
          id: 'playagain',
          src: 'play_again.png'
        }, {
          id: 'startgame',
          src: 'start_game.png'
        }, {
          id: 'flecha1',
          src: 'flecha_1.png'
        }, {
          id: 'flecha2',
          src: 'flecha_2.png'
        }, {
          id: 'flecha3',
          src: 'flecha_3.png'
        }, {
          id: 'flecha4',
          src: 'flecha_4.png'
        }, {
          id: 'flecha5',
          src: 'flecha_5.png'
        }, {
          id: 'image1dragble',
          src: 'image_1_dragble.png'
        }, {
          id: 'image2dragble',
          src: 'image_2_dragble.png'
        }, {
          id: 'image3dragble',
          src: 'image_3_dragble.png'
        }, {
          id: 'image4dragble',
          src: 'image_4_dragble.png'
        }, {
          id: 'image5dragble',
          src: 'image_5_dragble.png'
        }, {
          id: 'image1dropArea',
          src: 'image_1_dropArea.png'
        }, {
          id: 'image2dropArea',
          src: 'image_2_dropArea.png'
        }, {
          id: 'image3dropArea',
          src: 'image_3_dropArea.png'
        }, {
          id: 'image4dropArea',
          src: 'image_4_dropArea.png'
        }, {
          id: 'image5dropArea',
          src: 'image_5_dropArea.png'
        }, {
          id: 'verso1dropArea',
          src: 'verso_1_dropArea.png'
        }, {
          id: 'verso2dropArea',
          src: 'verso_2_dropArea.png'
        }, {
          id: 'verso3dropArea',
          src: 'verso_3_dropArea.png'
        }, {
          id: 'verso4dropArea',
          src: 'verso_4_dropArea.png'
        }, {
          id: 'verso5dropArea',
          src: 'verso_5_dropArea.png'
        }, {
          id: 'caterpillarlabel',
          src: 'caterpillar_label.png'
        }, {
          id: 'btnfinished',
          src: 'btn_finished.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/boing.mp3',
          id: 'boing'
        }, {
          src: 'sounds/TU2_U4_A6_instructions.mp3',
          id: 'instructions'
        }
      ];
      this.answers = [];
      this.preguntas = [
        {
          tipo: 'texto',
          imagen: 'toastMilkJuice',
          pregunta: "What's for breakfast?",
          opcionUno: 'Cereal. milk and juice',
          opcionDos: 'Toast, milk and juice'
        }, {
          tipo: 'texto',
          imagen: 'zebras',
          pregunta: 'Do zebras live in the grasslands?',
          opcionUno: 'Yes, they do.',
          opcionDos: "No, they don't."
        }, {
          tipo: 'imagen',
          pregunta: 'It has fins and scales. What is it?',
          opcionUno: 'fish',
          opcionDos: 'parrot'
        }, {
          tipo: 'imagen',
          pregunta: 'This animal is endangered',
          opcionUno: 'rhino',
          opcionDos: 'snake'
        }
      ];
      this.textos = [
        {
          uno: 'Caterpillar, catterpillar, up in the tree.',
          dos: 'Where do you come from? Please tell me.',
          x: '154',
          y: '150'
        }, {
          uno: "Wake up now. I can't believe my eyes!",
          dos: "Leaving the cocoon. What a big surprise!",
          x: '98',
          y: '417'
        }, {
          uno: "Then you are a caterpillar, long and green,",
          dos: "With one goal in life--to eat, eat, eat!",
          x: '230',
          y: '460'
        }, {
          uno: "Now yoy are a butterfly with wings so new.",
          dos: "Fly far away, up into the blue!",
          x: '134',
          y: '504'
        }, {
          uno: "Build a little house called cocoon.",
          dos: "Sleep a little while. I'll see you very soon!",
          x: '99',
          y: '547'
        }, {
          uno: "Tiny little eggs under a leaf,",
          dos: "Oh so difficult for me to see!",
          x: '329',
          y: '547'
        }
      ];
      this.positions = {
        drags: [
          {
            x: '550',
            y: '506'
          }, {
            x: '630',
            y: '506'
          }, {
            x: '590',
            y: '438'
          }, {
            x: '501',
            y: '438'
          }, {
            x: '677',
            y: '438'
          }
        ],
        drops: [
          {
            x: '482',
            y: '184'
          }, {
            x: '565',
            y: '130'
          }, {
            x: '656',
            y: '175'
          }, {
            x: '622',
            y: '268'
          }, {
            x: '517',
            y: '278'
          }
        ],
        flechas: [
          {
            x: '478',
            y: '273'
          }, {
            x: '511',
            y: '140'
          }, {
            x: '652',
            y: '134'
          }, {
            x: '727',
            y: '261'
          }, {
            x: '595',
            y: '360'
          }
        ]
      };
      U1A4.__super__.constructor.call(this, null, manifest, sounds);
    }

    U1A4.prototype.setStage = function() {
      U1A4.__super__.setStage.apply(this, arguments);
      this.insertBitmap('header', 'head', stageSize.w / 2, 0, 'tc');
      this.insertBitmap('instructions', 'inst', 20, 100);
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, 5, 0));
      return this.setTxtDropper().setDrags().introEvaluation();
    };

    U1A4.prototype.setTxtDropper = function() {
      var text;
      this.insertBitmap('caterpillarlabel', 'caterpillarlabel', 228, 136, 'mc');
      text = new createjs.Text(this.textos[0].uno, '12px Arial', '#333');
      text.x = this.textos[0].x;
      text.y = this.textos[0].y;
      this.addToMain(text);
      text = new createjs.Text(this.textos[0].dos, '12px Arial', '#333');
      text.x = this.textos[0].x;
      text.y = this.textos[0].y - (-12);
      this.addToMain(text);
      this.insertBitmap('verso1dropArea', 'verso1dropArea', 266, 207, 'mc');
      this.insertBitmap('verso2dropArea', 'verso2dropArea', 284, 250, 'mc');
      this.insertBitmap('verso3dropArea', 'verso3dropArea', 266, 293, 'mc');
      this.insertBitmap('verso4dropArea', 'verso4dropArea', 284, 335, 'mc');
      this.insertBitmap('verso5dropArea', 'verso5dropArea', 266, 377, 'mc');
      return this;
    };

    U1A4.prototype.setDrags = function() {
      var d, i, text, _i;
      for (i = _i = 1; _i <= 5; i = ++_i) {
        text = new DraggableText('drag' + i, this.textos[i].uno, i, this.textos[i].x, this.textos[i].y);
        this.addToMain(text);
        text = new DraggableText('drag' + i, this.textos[i].dos, i, this.textos[i].x, this.textos[i].y - (-12));
        this.addToMain(text);
        d = this.createBitmap('image' + i + 'dragble', 'image' + i + 'dragble', this.positions.drags[i - 1].x, this.positions.drags[i - 1].y);
        d.scaleX = d.scaleY = 0.7;
        this.addToMain(d);
        this.addToLibrary(d);
        this.insertBitmap('image' + i + 'dropArea', 'image' + i + 'dropArea', this.positions.drops[i - 1].x, this.positions.drops[i - 1].y);
        this.insertBitmap('flecha' + i, 'flecha' + i, this.positions.flechas[i - 1].x, this.positions.flechas[i - 1].y);
      }
      return this.insertBitmap('btnfinished', 'btnfinished', 577, 383);
    };

    U1A4.prototype.introEvaluation = function() {
      return U1A4.__super__.introEvaluation.apply(this, arguments);
      /*
      		for i in [1..6] by 1
      			@observer.subscribe 'init_evaluation', @library['name'+i].onInitEvaluation
      
      		@library['characters'].currentFrame = @answers[@index].id
      
      		TweenLite.from @library['header'], 1, {y:-@library['header'].height}
      		TweenLite.from @library['instructions'], 1, {alpha :0, x: 0, delay: 0.5}
      		TweenLite.from @library['names'], 1, {alpha: 0, y: @library['names'].y + 50, delay: 1}
      		TweenLite.from @library['dropname'], 1, {alpha: 0, y: @library['dropname'].y + 50, delay: 1}
      		TweenLite.from @library['characters'], 1, {alpha: 0, y: @library['characters'].y + 20, delay: 1.5, onComplete: @playInstructions, onCompleteParams: [@]}
      */

    };

    U1A4.prototype.initEvaluation = function(e) {
      U1A4.__super__.initEvaluation.apply(this, arguments);
      this.library['characters'].currentFrame = this.answers[this.index].id;
      createjs.Sound.play(this.answers[this.index].sound);
      return TweenLite.to(this.library['characters'], 0.5, {
        alpha: 1,
        y: stageSize.h - 180,
        ease: Quart.easeOut
      });
    };

    U1A4.prototype.evaluateAnswer = function(e) {
      var pt;
      this.answer = e.target;
      pt = this.library['dropname'].globalToLocal(this.stage.mouseX, this.stage.mouseY);
      if (this.library['dropname'].hitTest(pt.x, pt.y)) {
        if (this.answer.index === this.answers[this.index].id) {
          this.answer.blink(false);
          return setTimeout(this.finishEvaluation, 1 * 1000);
        } else {
          this.warning();
          return this.answer.returnToPlace();
        }
      } else {
        return this.answer.returnToPlace();
      }
    };

    U1A4.prototype.finishEvaluation = function() {
      TweenLite.to(this.library['characters'], 0.5, {
        alpha: 0,
        y: -200,
        ease: Back.easeOut,
        onComplete: this.nextEvaluation
      });
      return this.answer.returnToPlace();
    };

    U1A4.prototype.nextEvaluation = function() {
      this.index++;
      if (this.index < this.answers.length) {
        this.library['score'].updateCount(this.index);
        this.library['characters'].alpha = 1;
        this.library['characters'].y = stageSize.h - 180;
        this.library['characters'].currentFrame = this.answers[this.index].id;
        createjs.Sound.play(this.answers[this.index].sound);
        return TweenLite.from(this.library['characters'], 0.5, {
          alpha: 0,
          y: this.library['characters'].y + 20,
          ease: Quart.easeOut
        });
      } else {
        return this.finish();
      }
    };

    U1A4.prototype.repeatSound = function() {
      return createjs.Sound.play(this.answers[this.index].sound);
    };

    U1A4.prototype.finish = function() {
      var i, _i, _results;
      U1A4.__super__.finish.apply(this, arguments);
      _results = [];
      for (i = _i = 1; _i <= 6; i = _i += 1) {
        _results.push(this.library['name' + i].blink(false));
      }
      return _results;
    };

    window.U1A4 = U1A4;

    return U1A4;

  })(Oda);

}).call(this);

// Generated by CoffeeScript 1.6.3
(function() {
  var U6A4,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  U6A4 = (function(_super) {
    __extends(U6A4, _super);

    function U6A4() {
      this.nextEvaluation = __bind(this.nextEvaluation, this);
      this.finishEvaluation = __bind(this.finishEvaluation, this);
      this.evaluateAnswer = __bind(this.evaluateAnswer, this);
      this.setClick = __bind(this.setClick, this);
      this.initEvaluation = __bind(this.initEvaluation, this);
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca1.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'repeatbtn',
          src: 'repeat-btn.png'
        }, {
          id: 'playagain',
          src: 'play_again.png'
        }, {
          id: 'startgame',
          src: 'start_game.png'
        }, {
          id: 'image1',
          src: 'image_1.png'
        }, {
          id: 'image2',
          src: 'image_2.png'
        }, {
          id: 'image3',
          src: 'image_3.png'
        }, {
          id: 'image4',
          src: 'image_4.png'
        }, {
          id: 'image5',
          src: 'image_5.png'
        }, {
          id: 'image7',
          src: 'image_7.png'
        }, {
          id: 'image9',
          src: 'image_9.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/good.mp3',
          id: 'good'
        }, {
          src: 'sounds/boing.mp3',
          id: 'boing'
        }, {
          src: 'sounds/TU3_U6_A4_instructions.mp3',
          id: 'instructions'
        }, {
          src: 'sounds/wrong.mp3',
          id: 'wrong'
        }
      ];
      this.game = {
        preguntas: [
          {
            tipo: 'texto',
            imagen: 'image9',
            pregunta: "Did the glyptodont fly?",
            opcionUno: 'Yes, it did.',
            opcionDos: "No, it didn't",
            respuesta: "opcionDos"
          }, {
            tipo: 'texto',
            imagen: 'image9',
            pregunta: "Did the glyptodont live in swamps?",
            opcionUno: 'Yes, it did.',
            opcionDos: "No, it didn't",
            respuesta: "opcionUno"
          }, {
            tipo: 'texto',
            imagen: 'image4',
            pregunta: "Did T-rex have sharp teeth?",
            opcionUno: 'Yes, it did.',
            opcionDos: "No, it didn't",
            respuesta: "opcionUno"
          }, {
            tipo: 'texto',
            imagen: 'image7',
            pregunta: "Did the sand turtle crawl on four legs?",
            opcionUno: 'Yes, it did.',
            opcionDos: "No, it didn't",
            respuesta: "opcionUno"
          }, {
            tipo: 'texto',
            imagen: 'image7',
            pregunta: "Did the sand turtle climb trees?",
            opcionUno: 'Yes, it did.',
            opcionDos: "No, it didn't",
            respuesta: "opcionDos"
          }, {
            tipo: 'texto',
            imagen: 'image3',
            pregunta: "Did the T-rex eat meat?",
            opcionUno: 'Yes, it did.',
            opcionDos: "No, it didn't",
            respuesta: "opcionUno"
          }, {
            tipo: 'texto',
            imagen: 'image2',
            pregunta: "Did the T-rex live in the ocean?",
            opcionUno: 'Yes, it did.',
            opcionDos: "No, it didn't",
            respuesta: "opcionDos"
          }, {
            tipo: 'texto',
            imagen: 'image1',
            pregunta: "Did the T-rex swim like a fish?",
            opcionUno: 'Yes, it did.',
            opcionDos: "No, it didn't",
            respuesta: "opcionDos"
          }, {
            tipo: 'texto',
            imagen: 'image5',
            pregunta: "Did the saber-toothed fish have a shell?",
            opcionUno: 'Yes, it did.',
            opcionDos: "No, it didn't",
            respuesta: "opcionDos"
          }, {
            tipo: 'texto',
            imagen: 'image5',
            pregunta: "Did the saber-toothed fish have fangs?",
            opcionUno: 'Yes, it did.',
            opcionDos: "No, it didn't",
            respuesta: "opcionUno"
          }
        ]
      };
      U6A4.__super__.constructor.call(this, null, manifest, sounds);
    }

    U6A4.prototype.setStage = function() {
      U6A4.__super__.setStage.apply(this, arguments);
      this.preguntas = this.shuffleNoRepeat(this.game.preguntas, 16);
      this.insertBitmap('header', 'head', stageSize.w / 2, 0, 'tc');
      this.insertInstructions('instructions', 'Choose the correct answers to the questions.', 40, 100);
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, 10, 0));
      return this.setQuestion(0).introEvaluation();
    };

    U6A4.prototype.setQuestion = function(i) {
      var diagonal, dos, opciones, question, text, total, uno, v;
      question = new createjs.Container();
      question.x = 0;
      question.y = 0;
      question.name = 'question';
      if (this.preguntas[i].tipo === 'texto') {
        v = this.createBitmap(this.preguntas[i].imagen, this.preguntas[i].imagen, stageSize.w / 2, stageSize.h / 2 + 30, 'mc');
        v.scaleX = v.scaleY = 0.5;
        question.addChild(v);
        this.addToLibrary(v);
        text = new createjs.Text(this.preguntas[i].pregunta, '24px Quicksand', '#333');
        text.name = 'titulo';
        text.x = stageSize.w / 2;
        text.y = 140;
        text.textAlign = 'center';
        question.addChild(text);
        this.addToLibrary(text);
        opciones = new createjs.Container();
        uno = new ClickableText(this.preguntas[i].opcionUno, this.preguntas[i].opcionUno, i, 0, 0);
        opciones.addChild(uno);
        this.addToLibrary(uno);
        diagonal = new createjs.Text('/', '16px Quicksand', '#333');
        diagonal.name = 'diagonal';
        diagonal.x = uno.x + uno.width;
        diagonal.y = 0;
        opciones.addChild(diagonal);
        this.addToLibrary(diagonal);
        dos = new ClickableText(this.preguntas[i].opcionDos, this.preguntas[i].opcionDos, i, diagonal.x + 10, 0);
        opciones.addChild(dos);
        this.addToLibrary(dos);
        total = uno.width + dos.width + 20;
        opciones.x = stageSize.w / 2 - total / 2;
        opciones.y = 490;
        question.addChild(opciones);
      } else if (this.preguntas[i].tipo === 'imagen') {
        text = new createjs.Text(this.preguntas[i].pregunta, '24px Quicksand', '#333');
        text.name = 'titulo';
        text.x = 200;
        text.y = 140;
        question.addChild(text);
        this.addToLibrary(text);
        v = this.createBitmap(this.preguntas[i].opcionUno, this.preguntas[i].opcionUno, stageSize.w / 4, stageSize.h / 2 + 30, 'mc');
        v.scaleX = v.scaleY = 0.3;
        question.addChild(v);
        this.addToLibrary(v);
        v = this.createBitmap(this.preguntas[i].opcionDos, this.preguntas[i].opcionDos, (stageSize.w / 4) * 3, stageSize.h / 2 + 30, 'mc');
        v.scaleX = v.scaleY = 0.3;
        question.addChild(v);
        this.addToLibrary(v);
      }
      this.addToMain(question);
      return this;
    };

    U6A4.prototype.introEvaluation = function() {
      U6A4.__super__.introEvaluation.apply(this, arguments);
      TweenLite.from(this.library['header'], 1, {
        y: -this.library['header'].height
      });
      TweenLite.from(this.library['instructions'], 1, {
        alpha: 0,
        x: 0,
        delay: 0.5
      });
      return TweenLite.from(this.library['question'], 1, {
        alpha: 0,
        y: this.library['question'].y - 20,
        delay: 1,
        onComplete: this.playInstructions,
        onCompleteParams: [this]
      });
    };

    U6A4.prototype.initEvaluation = function(e) {
      U6A4.__super__.initEvaluation.apply(this, arguments);
      return this.setClick(0);
    };

    U6A4.prototype.setClick = function(i) {
      this.library[this.preguntas[i].opcionUno].index = 'opcionUno';
      this.library[this.preguntas[i].opcionDos].index = 'opcionDos';
      this.library[this.preguntas[i].opcionUno].addEventListener('click', this.evaluateAnswer);
      this.library[this.preguntas[i].opcionDos].addEventListener('click', this.evaluateAnswer);
      return this;
    };

    U6A4.prototype.evaluateAnswer = function(e) {
      this.answer = e.target;
      if (this.answer.index === this.preguntas[this.index].respuesta) {
        createjs.Sound.play('good');
        this.library['score'].plusOne();
        return this.finishEvaluation();
      } else {
        this.warning();
        return this.finishEvaluation();
      }
    };

    U6A4.prototype.finishEvaluation = function() {
      if (this.preguntas[this.index].tipo === 'texto') {
        TweenLite.to(this.library[this.preguntas[this.index].opcionUno], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut
        });
        TweenLite.to(this.library[this.preguntas[this.index].opcionDos], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut
        });
        TweenLite.to(this.library['titulo'], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut
        });
        TweenLite.to(this.library['diagonal'], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut
        });
        return TweenLite.to(this.library[this.preguntas[this.index].imagen], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut,
          onComplete: this.nextEvaluation
        });
      } else if (this.preguntas[this.index].tipo === 'imagen') {
        TweenLite.to(this.library['titulo'], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut,
          onComplete: this.nextEvaluation
        });
        TweenLite.to(this.library[this.preguntas[this.index].opcionDos], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut
        });
        return TweenLite.to(this.library[this.preguntas[this.index].opcionUno], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut
        });
      }
    };

    U6A4.prototype.nextEvaluation = function() {
      this.index++;
      if (this.index < this.preguntas.length) {
        return this.setQuestion(this.index).setClick(this.index);
      } else {
        return this.finish();
      }
    };

    U6A4.prototype.finish = function() {
      return U6A4.__super__.finish.apply(this, arguments);
    };

    window.U6A4 = U6A4;

    return U6A4;

  })(Oda);

}).call(this);

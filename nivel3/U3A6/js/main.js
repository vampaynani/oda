// Generated by CoffeeScript 1.6.3
(function() {
  var U1A6,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  U1A6 = (function(_super) {
    __extends(U1A6, _super);

    function U1A6() {
      this.finish = __bind(this.finish, this);
      this.nextEvaluation = __bind(this.nextEvaluation, this);
      this.finishEvaluation = __bind(this.finishEvaluation, this);
      this.evaluateAnswer = __bind(this.evaluateAnswer, this);
      this.initEvaluation = __bind(this.initEvaluation, this);
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca1.png'
        }, {
          id: 'inst',
          src: 'inst.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'cooking',
          src: 'image_cooking.png'
        }, {
          id: 'dancing',
          src: 'image_dancing.png'
        }, {
          id: 'making',
          src: 'image_making.png'
        }, {
          id: 'painting',
          src: 'image_painting.png'
        }, {
          id: 'playing',
          src: 'image_playing.png'
        }, {
          id: 'singing',
          src: 'image_singing.png'
        }, {
          id: 'numbercooking',
          src: 'number_cooking.png'
        }, {
          id: 'numberdancing',
          src: 'number_dancing.png'
        }, {
          id: 'numbermaking',
          src: 'number_making.png'
        }, {
          id: 'numberpainting',
          src: 'number_painting.png'
        }, {
          id: 'numberplaying',
          src: 'number_playing.png'
        }, {
          id: 'numbersinging',
          src: 'number_singing.png'
        }, {
          id: 'crosswords',
          src: 'prop_crossword.png'
        }, {
          id: 'aLetra',
          src: 'a.png'
        }, {
          id: 'bLetra',
          src: 'b.png'
        }, {
          id: 'cLetra',
          src: 'c.png'
        }, {
          id: 'dLetra',
          src: 'd.png'
        }, {
          id: 'eLetra',
          src: 'e.png'
        }, {
          id: 'fLetra',
          src: 'f.png'
        }, {
          id: 'gLetra',
          src: 'g.png'
        }, {
          id: 'hLetra',
          src: 'h.png'
        }, {
          id: 'iLetra',
          src: 'i.png'
        }, {
          id: 'jLetra',
          src: 'j.png'
        }, {
          id: 'kLetra',
          src: 'k.png'
        }, {
          id: 'lLetra',
          src: 'l.png'
        }, {
          id: 'mLetra',
          src: 'm.png'
        }, {
          id: 'nLetra',
          src: 'n.png'
        }, {
          id: 'oLetra',
          src: 'o.png'
        }, {
          id: 'pLetra',
          src: 'p.png'
        }, {
          id: 'qLetra',
          src: 'q.png'
        }, {
          id: 'rLetra',
          src: 'r.png'
        }, {
          id: 'sLetra',
          src: 's.png'
        }, {
          id: 'tLetra',
          src: 't.png'
        }, {
          id: 'uLetra',
          src: 'u.png'
        }, {
          id: 'vLetra',
          src: 'v.png'
        }, {
          id: 'wLetra',
          src: 'w.png'
        }, {
          id: 'xLetra',
          src: 'x.png'
        }, {
          id: 'yLetra',
          src: 'y.png'
        }, {
          id: 'zLetra',
          src: 'z.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/TU2_U1_A6_instructions.mp3',
          id: 'instructions'
        }, {
          src: 'sounds/boing.mp3',
          id: 'boing'
        }, {
          src: 'sounds/good.mp3',
          id: 'good'
        }, {
          src: 'sounds/wrong.mp3',
          id: 'wrong'
        }
      ];
      this.abc = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];
      this.numbers = [
        {
          id: '1',
          x: 8,
          y: -1
        }, {
          id: '2',
          x: 6,
          y: 2
        }, {
          id: '3',
          x: 6,
          y: 3
        }, {
          id: '4',
          x: 10,
          y: 3
        }, {
          id: '5',
          x: 4,
          y: 5
        }, {
          id: '6',
          x: -1,
          y: 9
        }
      ];
      this.containers = [
        {
          id: 'p',
          x: 8,
          y: 0
        }, {
          id: 'l',
          x: 8,
          y: 1
        }, {
          id: 'a',
          x: 8,
          y: 2
        }, {
          id: 'y',
          x: 8,
          y: 3
        }, {
          id: 'i',
          x: 8,
          y: 4
        }, {
          id: 'n',
          x: 8,
          y: 5
        }, {
          id: 'g',
          x: 8,
          y: 6
        }, {
          id: 't',
          x: 8,
          y: 8
        }, {
          id: 'h',
          x: 8,
          y: 9
        }, {
          id: 'e',
          x: 8,
          y: 10
        }, {
          id: 'f',
          x: 8,
          y: 12
        }, {
          id: 'l',
          x: 8,
          y: 13
        }, {
          id: 'u',
          x: 8,
          y: 14
        }, {
          id: 't',
          x: 8,
          y: 15
        }, {
          id: 'e',
          x: 8,
          y: 16
        }, {
          id: 'd',
          x: 7,
          y: 2
        }, {
          id: 'n',
          x: 9,
          y: 2
        }, {
          id: 'c',
          x: 10,
          y: 2
        }, {
          id: 'i',
          x: 11,
          y: 2
        }, {
          id: 'n',
          x: 12,
          y: 2
        }, {
          id: 'g',
          x: 13,
          y: 2
        }, {
          id: 'm',
          x: 6,
          y: 4
        }, {
          id: 'a',
          x: 6,
          y: 5
        }, {
          id: 'k',
          x: 6,
          y: 6
        }, {
          id: 'i',
          x: 6,
          y: 7
        }, {
          id: 'n',
          x: 6,
          y: 8
        }, {
          id: 'g',
          x: 6,
          y: 9
        }, {
          id: 'c',
          x: 6,
          y: 11
        }, {
          id: 'r',
          x: 6,
          y: 12
        }, {
          id: 'a',
          x: 6,
          y: 13
        }, {
          id: 'f',
          x: 6,
          y: 14
        }, {
          id: 't',
          x: 6,
          y: 15
        }, {
          id: 's',
          x: 6,
          y: 16
        }, {
          id: 's',
          x: 10,
          y: 4
        }, {
          id: 'i',
          x: 10,
          y: 5
        }, {
          id: 'n',
          x: 10,
          y: 6
        }, {
          id: 'g',
          x: 10,
          y: 7
        }, {
          id: 'i',
          x: 10,
          y: 8
        }, {
          id: 'n',
          x: 10,
          y: 9
        }, {
          id: 'g',
          x: 10,
          y: 10
        }, {
          id: 'p',
          x: 5,
          y: 5
        }, {
          id: 'i',
          x: 7,
          y: 5
        }, {
          id: 'n',
          x: 8,
          y: 5
        }, {
          id: 't',
          x: 9,
          y: 5
        }, {
          id: 'n',
          x: 11,
          y: 5
        }, {
          id: 'g',
          x: 12,
          y: 5
        }, {
          id: 'c',
          x: 0,
          y: 9
        }, {
          id: 'o',
          x: 1,
          y: 9
        }, {
          id: 'o',
          x: 2,
          y: 9
        }, {
          id: 'k',
          x: 3,
          y: 9
        }, {
          id: 'i',
          x: 4,
          y: 9
        }, {
          id: 'n',
          x: 5,
          y: 9
        }
      ];
      this.game = {
        answers: {
          cooking: {
            r: false,
            c: [46, 47, 48, 49, 50, 51, 26]
          },
          dancing: {
            r: false,
            c: [15, 2, 16, 17, 18, 19, 20]
          },
          making: {
            r: false,
            c: [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
          },
          painting: {
            r: false,
            c: [40, 22, 41, 42, 43, 34, 44, 45]
          },
          playing: {
            r: false,
            c: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
          },
          singing: {
            r: false,
            c: [33, 34, 35, 36, 37, 38, 39]
          }
        }
      };
      U1A6.__super__.constructor.call(this, null, manifest, sounds);
    }

    U1A6.prototype.setStage = function() {
      U1A6.__super__.setStage.apply(this, arguments);
      this.answers = this.clone(this.game.answers);
      this.insertBitmap('header', 'head', stageSize.w / 2, 0, 'tc');
      this.insertInstructions('instructions', 'Look and drag the letters to complete the crossword puzzle.', 30, 100);
      this.insertBitmap('cooking', 'cooking', 564, 422, 'mc');
      this.insertBitmap('dancing', 'dancing', 109, 258, 'mc');
      this.insertBitmap('making', 'making', 193, 403, 'mc');
      this.insertBitmap('painting', 'painting', 688, 297, 'mc');
      this.insertBitmap('playing', 'playing', 263, 200, 'mc');
      this.insertBitmap('singing', 'singing', 708, 159, 'mc');
      this.insertBitmap('numbercooking', 'numbercooking', 547, 354);
      this.insertBitmap('numberdancing', 'numberdancing', 63, 185);
      this.insertBitmap('numbermaking', 'numbermaking', 136, 370);
      this.insertBitmap('numberpainting', 'numberpainting', 587, 244);
      this.insertBitmap('numberplaying', 'numberplaying', 237, 137);
      this.insertBitmap('numbersinging', 'numbersinging', 692, 94);
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, 8, 0));
      this.createDroppers();
      this.createAlphabet();
      return this.introEvaluation();
    };

    U1A6.prototype.createAlphabet = function() {
      var alphabet, i, letter, letterObj, _i, _ref;
      alphabet = new createjs.Container();
      alphabet.x = 135;
      alphabet.y = 510;
      alphabet.name = 'alphabet';
      for (i = _i = 0, _ref = this.abc.length - 1; _i <= _ref; i = _i += 1) {
        letter = this.abc[i];
        if (i <= 13) {
          letterObj = new Draggable(letter, this.preload.getResult(letter + 'Letra'), letter, 41.5 * i, 0);
        } else {
          letterObj = new Draggable(letter, this.preload.getResult(letter + 'Letra'), letter, 41.5 * i - 540, 34);
        }
        letterObj.onInitEvaluation();
        alphabet.addChild(letterObj);
        this.addToLibrary(letterObj);
      }
      return this.addToMain(alphabet);
    };

    U1A6.prototype.createDroppers = function() {
      var crosswords, drop, i, t, _i, _j, _ref;
      crosswords = new createjs.Container();
      crosswords.x = 285;
      crosswords.y = 56;
      crosswords.name = 'crosswords';
      for (i = _i = 0, _ref = this.containers.length - 1; _i <= _ref; i = _i += 1) {
        drop = new WordContainer("h" + i, '', '#FFF', '#999', this.containers[i].x * 20, this.containers[i].y * 20, 20, 20);
        drop.setRectShape('#FFF', '#999', 2, 20, 20);
        drop.text.y -= 3;
        drop.id = this.containers[i].id;
        this.addToLibrary(drop);
        crosswords.addChild(drop);
      }
      for (i = _j = 0; _j <= 5; i = ++_j) {
        t = new createjs.Text(this.numbers[i].id, '14px Quicksand', '#333');
        t.x = this.numbers[i].x * 20 + 6;
        t.y = this.numbers[i].y * 20 + 4;
        crosswords.addChild(t);
      }
      return this.addToMain(crosswords);
    };

    U1A6.prototype.introEvaluation = function() {
      var i, _i, _ref;
      U1A6.__super__.introEvaluation.apply(this, arguments);
      this.library['crosswords'].y = 146;
      this.library['crosswords'].alpha = 1;
      this.library['alphabet'].y = 510;
      this.library['alphabet'].alpha = 1;
      this.library['cooking'].alpha = 1;
      this.library['numbercooking'].alpha = 1;
      this.library['dancing'].alpha = 1;
      this.library['numberdancing'].alpha = 1;
      this.library['singing'].alpha = 1;
      this.library['numbersinging'].alpha = 1;
      this.library['making'].alpha = 1;
      this.library['numbermaking'].alpha = 1;
      this.library['painting'].alpha = 1;
      this.library['numberpainting'].alpha = 1;
      this.library['playing'].alpha = 1;
      this.library['numberplaying'].alpha = 1;
      for (i = _i = 0, _ref = this.containers.length - 1; _i <= _ref; i = _i += 1) {
        if (this.containers[i].a) {
          this.library['h' + i].changeText(this.containers[i].id);
        } else {
          this.library['h' + i].changeText('');
        }
      }
      TweenLite.from(this.library['header'], 1, {
        y: -this.library['header'].height
      });
      TweenLite.from(this.library['instructions'], 1, {
        alpha: 0,
        x: 0,
        delay: 0.5
      });
      TweenMax.allFrom([this.library['cooking'], this.library['dancing'], this.library['making'], this.library['painting'], this.library['playing'], this.library['singing']], 1, {
        alpha: 0,
        delay: 1.5
      }, 0.2);
      TweenMax.allFrom([this.library['numbercooking'], this.library['numberdancing'], this.library['numbermaking'], this.library['numberpainting'], this.library['numberplaying'], this.library['numbersinging']], 1, {
        alpha: 0,
        delay: 1.5
      }, 0.2);
      TweenLite.from(this.library['alphabet'], 1, {
        alpha: 0,
        y: this.library['alphabet'].y + 50,
        delay: 1.5
      });
      return TweenLite.from(this.library['crosswords'], 1, {
        alpha: 0,
        y: this.library['crosswords'].y + 50,
        delay: 1,
        onComplete: this.playInstructions,
        onCompleteParams: [this]
      });
    };

    U1A6.prototype.initEvaluation = function(e) {
      var letter, _i, _len, _ref, _results;
      U1A6.__super__.initEvaluation.apply(this, arguments);
      _ref = this.abc;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        letter = _ref[_i];
        _results.push(this.library[letter].addEventListener('drop', this.evaluateAnswer));
      }
      return _results;
    };

    U1A6.prototype.evaluateAnswer = function(e) {
      var dropped, hit, hitdrop, i, pt, _i, _ref;
      this.answer = e.target;
      dropped = false;
      hitdrop = null;
      for (i = _i = 0, _ref = this.containers.length - 1; _i <= _ref; i = _i += 1) {
        hit = this.library["h" + i];
        pt = hit.globalToLocal(this.stage.mouseX, this.stage.mouseY);
        if (hit.hitTest(pt.x, pt.y)) {
          dropped = true;
          if (hit.id === this.answer.index) {
            hitdrop = hit;
          }
        } else {
          this.answer.returnToPlace();
        }
      }
      if (dropped === true) {
        if (hitdrop !== null) {
          hitdrop.changeText(hitdrop.id);
          this.answer.x = this.answer.pos.x;
          this.answer.y = this.answer.pos.y;
          this.evaluate('cooking');
          this.evaluate('dancing');
          this.evaluate('making');
          this.evaluate('painting');
          this.evaluate('playing');
          return this.evaluate('singing');
        } else {
          return this.warning();
        }
      }
    };

    U1A6.prototype.evaluate = function(instrument) {
      var box, ready, _i, _len, _ref;
      ready = true;
      if (!this.answers[instrument].r) {
        _ref = this.answers[instrument].c;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          box = _ref[_i];
          if (this.library['h' + box].text.text === '') {
            ready = false;
          }
        }
        if (ready) {
          this.finishEvaluation();
          this.answers[instrument].r = true;
          return this.library['score'].plusOne();
        }
      }
    };

    U1A6.prototype.finishEvaluation = function(e) {
      return TweenMax.allTo([this.library[e.target.instrument], this.library['number' + e.target.instrument]], 1, {
        alpha: 0,
        ease: Quart.easeOut,
        onComplete: this.nextEvaluation
      });
    };

    U1A6.prototype.nextEvaluation = function() {
      var complete, instrument;
      complete = true;
      for (instrument in this.answers) {
        if (this.answers[instrument].r === false) {
          complete = false;
        }
      }
      if (complete) {
        TweenLite.to(this.library['alphabet'], 0.5, {
          alpha: 0,
          y: this.library['alphabet'].y - 100,
          ease: Quart.easeOut
        });
      }
      if (complete) {
        return TweenLite.to(this.library['crosswords'], 0.5, {
          alpha: 0,
          y: this.library['crosswords'].y - 100,
          ease: Quart.easeOut,
          onComplete: this.finish
        });
      }
    };

    U1A6.prototype.blink = function(obj, state) {
      if (state == null) {
        state = true;
      }
      TweenMax.killTweensOf(obj);
      obj.alpha = 1;
      if (state) {
        return TweenMax.to(obj, 0.5, {
          alpha: .5,
          repeat: -1,
          yoyo: true
        });
      }
    };

    U1A6.prototype.finish = function() {
      return U1A6.__super__.finish.apply(this, arguments);
    };

    window.U1A6 = U1A6;

    return U1A6;

  })(Oda);

}).call(this);

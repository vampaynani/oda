// Generated by CoffeeScript 1.6.3
(function() {
  var U4A3,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  U4A3 = (function(_super) {
    __extends(U4A3, _super);

    function U4A3() {
      this.finishEvaluation = __bind(this.finishEvaluation, this);
      this.evaluateClick = __bind(this.evaluateClick, this);
      this.evaluateAnswer3 = __bind(this.evaluateAnswer3, this);
      this.evaluateAnswer2 = __bind(this.evaluateAnswer2, this);
      this.evaluateAnswer1 = __bind(this.evaluateAnswer1, this);
      this.initEvaluation = __bind(this.initEvaluation, this);
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca1.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'repeatbtn',
          src: 'repeat-btn.png'
        }, {
          id: 'playagain',
          src: 'play_again.png'
        }, {
          id: 'startgame',
          src: 'start_game.png'
        }, {
          id: 'btnConfused',
          src: 'btn_confused.png'
        }, {
          id: 'btnDirty',
          src: 'btn_dirty.png'
        }, {
          id: 'btnEnergetic',
          src: 'btn_energetic.png'
        }, {
          id: 'btnHot',
          src: 'btn_hot.png'
        }, {
          id: 'btnSick',
          src: 'btn_sick.png'
        }, {
          id: 'btnTired',
          src: 'btn_tired.png'
        }, {
          id: 'faceConfused',
          src: 'face_confused.png'
        }, {
          id: 'faceDirty',
          src: 'face_dirty.png'
        }, {
          id: 'faceEnergetic',
          src: 'face_energetic.png'
        }, {
          id: 'faceHot',
          src: 'face_hot.png'
        }, {
          id: 'faceSick',
          src: 'face_sick.png'
        }, {
          id: 'faceTired',
          src: 'face_tired.png'
        }, {
          id: 'n2',
          src: 'tag_answer.png'
        }, {
          id: 'n3',
          src: 'tag_pronoun.png'
        }, {
          id: 'n1',
          src: 'tag_verb.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/good.mp3',
          id: 'good'
        }, {
          src: 'sounds/wrong.mp3',
          id: 'wrong'
        }, {
          src: 'sounds/TU3_U4_A3_instructions.mp3',
          id: 'instructions'
        }
      ];
      this.game = {
        steps: [
          {
            x: 200,
            y: 235,
            face: 'faceSick',
            id: 'btnSick',
            frase: "When I'm sick, I ",
            targets: ['go', 'to the doctor'],
            a1: 1,
            a2: 5
          }, {
            x: 415,
            y: 235,
            face: 'faceConfused',
            id: 'btnConfused',
            frase: "When I'm confused, I ",
            targets: ['ask', 'my teacher', 'a question'],
            a1: 3,
            a2: 1,
            a3: 1
          }, {
            x: 630,
            y: 235,
            face: 'faceTired',
            id: 'btnTired',
            frase: "When I'm tired, I ",
            targets: ['go', 'to bed'],
            a1: 1,
            a2: 3
          }, {
            x: 200,
            y: 380,
            face: 'faceHot',
            id: 'btnHot',
            frase: "When I'm hot, I ",
            targets: ['sit', 'in front of', 'a fan'],
            a1: 4,
            a2: 2,
            a3: 2
          }, {
            x: 415,
            y: 380,
            face: 'faceDirty',
            id: 'btnDirty',
            frase: "When I'm dirty, I ",
            targets: ['take', 'a shower'],
            a1: 2,
            a2: 4
          }, {
            x: 630,
            y: 380,
            face: 'faceEnergetic',
            id: 'btnEnergetic',
            frase: "When I'm energetic, I ",
            targets: ['go', 'roller skating'],
            a1: 1,
            a2: 6
          }
        ],
        opt1: [
          {
            i: 1,
            t: 'go',
            x: 31,
            y: 36
          }, {
            i: 2,
            t: 'take',
            x: 69,
            y: 21
          }, {
            i: 3,
            t: 'ask',
            x: 67,
            y: 70
          }, {
            i: 4,
            t: 'sit',
            x: 117,
            y: 47
          }
        ],
        opt2: [
          {
            i: 1,
            t: 'my teacher',
            x: 36,
            y: 36
          }, {
            i: 2,
            t: 'in front of',
            x: 16,
            y: 93
          }, {
            i: 3,
            t: 'to bed',
            x: 67,
            y: 132
          }, {
            i: 4,
            t: 'a shower',
            x: 164,
            y: 25
          }, {
            i: 5,
            t: 'to the doctor',
            x: 116,
            y: 69
          }, {
            i: 6,
            t: 'roller skating',
            x: 134,
            y: 113
          }
        ],
        opt3: [
          {
            i: 1,
            t: 'a question',
            x: 22,
            y: 21
          }, {
            i: 2,
            t: 'a fan',
            x: 43,
            y: 57
          }
        ]
      };
      U4A3.__super__.constructor.call(this, null, manifest, sounds);
    }

    U4A3.prototype.setStage = function() {
      U4A3.__super__.setStage.apply(this, arguments);
      this.current = this.shuffle(this.game.steps);
      this.insertBitmap('header', 'head', stageSize.w / 2, 0, 'tc');
      this.insertInstructions('instructions', 'Listen and click on the correct ticket.', 40, 100);
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, 12, 0));
      this.setNube1().setNube2().setNube3();
      this.setDropper();
      return this.setTickets().introEvaluation();
    };

    U4A3.prototype.setTickets = function() {
      var i, tickets, v, _i, _ref;
      if (this.library.tickets) {
        tickets = this.library.tickets;
      } else {
        tickets = new createjs.Container();
        tickets.name = 'tickets';
        for (i = _i = 0, _ref = this.current.length - 1; _i <= _ref; i = _i += 1) {
          v = this.createBitmap(this.current[i].id, this.current[i].id, this.current[i].x, this.current[i].y, 'tc');
          v.scaleX = v.scaleY = 0.8;
          tickets.addChild(v);
          this.addToLibrary(v);
        }
      }
      this.addToMain(tickets);
      return this;
    };

    U4A3.prototype.setDropper = function() {
      var dropper, face, frase, h, i, picture, question, step, v, _i, _ref;
      step = this.index;
      if (this.library.dropper) {
        dropper = this.library.dropper;
      } else {
        dropper = new createjs.Container();
        dropper.x = 70;
        dropper.y = 140;
        dropper.name = 'dropper';
        this.addToMain(dropper);
      }
      dropper.removeAllChildren();
      face = this.createBitmap('face', this.current[step].face, 0, 0);
      frase = this.createText('frase', this.current[step].frase, '28px Quicksand', '#333', 100, 20);
      this.addToLibrary(frase);
      dropper.addChild(frase, face);
      for (i = _i = 0, _ref = this.current[step].targets.length - 1; _i <= _ref; i = _i += 1) {
        h = new WordContainer("wc" + (i + 1), '', '#FFF', '#F00', (120 * i + 10) + 130 + frase.getMeasuredWidth(), 25, 110, 22);
        h.index = i;
        dropper.addChild(h);
        this.addToLibrary(h);
      }
      question = this.createText('q', '.', '28px Quicksand', '#333', this.current[step].targets.length * 120 + 140 + frase.getMeasuredWidth(), 20);
      dropper.addChild(question);
      if (this.library.picture) {
        picture = this.library.picture;
      } else {
        picture = new createjs.Container();
        picture.name = 'picture';
        this.addToMain(picture);
      }
      picture.removeAllChildren();
      v = this.createBitmap('pic', this.current[step].id, stageSize.w / 2, 220, 'tc');
      picture.addChild(v);
      return this;
    };

    U4A3.prototype.setNube1 = function() {
      var back, container, word1, word2, word3, word4;
      container = new createjs.Container();
      container.x = 110;
      container.y = 452;
      container.name = 'group1';
      back = this.createBitmap('backNube1', 'n1', 0, 0);
      container.addChild(back);
      word1 = new ClickableText('w11', this.game.opt1[0].t, 1, this.game.opt1[0].x, this.game.opt1[0].y);
      word2 = new ClickableText('w12', this.game.opt1[1].t, 2, this.game.opt1[1].x, this.game.opt1[1].y);
      word3 = new ClickableText('w13', this.game.opt1[2].t, 3, this.game.opt1[2].x, this.game.opt1[2].y);
      word4 = new ClickableText('w14', this.game.opt1[3].t, 4, this.game.opt1[3].x, this.game.opt1[3].y);
      container.addChild(word1, word2, word3, word4);
      this.addToLibrary(word1, word2, word3, word4);
      this.addToMain(container);
      return this;
    };

    U4A3.prototype.setNube2 = function() {
      var back, container, word1, word2, word3, word4, word5, word6;
      container = new createjs.Container();
      container.x = 312;
      container.y = 395;
      container.name = 'group2';
      back = this.createBitmap('backNube2', 'n2', 0, 0);
      container.addChild(back);
      word1 = new ClickableText('w21', this.game.opt2[0].t, 1, this.game.opt2[0].x, this.game.opt2[0].y);
      word2 = new ClickableText('w22', this.game.opt2[1].t, 2, this.game.opt2[1].x, this.game.opt2[1].y);
      word3 = new ClickableText('w23', this.game.opt2[2].t, 3, this.game.opt2[2].x, this.game.opt2[2].y);
      word4 = new ClickableText('w24', this.game.opt2[3].t, 4, this.game.opt2[3].x, this.game.opt2[3].y);
      word5 = new ClickableText('w25', this.game.opt2[4].t, 5, this.game.opt2[4].x, this.game.opt2[4].y);
      word6 = new ClickableText('w26', this.game.opt2[5].t, 6, this.game.opt2[5].x, this.game.opt2[5].y);
      container.addChild(word1, word2, word3, word4, word5, word6);
      this.addToLibrary(word1, word2, word3, word4, word5, word6);
      this.addToMain(container);
      return this;
    };

    U4A3.prototype.setNube3 = function() {
      var back, container, word1, word2;
      container = new createjs.Container();
      container.x = 626;
      container.y = 459;
      container.name = 'group3';
      back = this.createBitmap('backNube3', 'n3', 0, 0);
      container.addChild(back);
      word1 = new ClickableText('w31', this.game.opt3[0].t, 1, this.game.opt3[0].x, this.game.opt3[0].y);
      word2 = new ClickableText('w32', this.game.opt3[1].t, 2, this.game.opt3[1].x, this.game.opt3[1].y);
      container.addChild(word1, word2);
      this.addToLibrary(word1, word2);
      this.addToMain(container);
      return this;
    };

    U4A3.prototype.introEvaluation = function() {
      U4A3.__super__.introEvaluation.apply(this, arguments);
      TweenLite.from(this.library.header, 1, {
        y: -this.library.header.height
      });
      TweenLite.from(this.library.instructions, 1, {
        alpha: 0,
        x: 0,
        delay: 0.5
      });
      TweenLite.to(this.library.picture, 0, {
        alpha: 0
      });
      TweenLite.to(this.library.group1, 0, {
        alpha: 0
      });
      TweenLite.to(this.library.group2, 0, {
        alpha: 0
      });
      TweenLite.to(this.library.group3, 0, {
        alpha: 0
      });
      return TweenLite.from(this.library.tickets, 1, {
        alpha: 0,
        y: this.library.tickets.y + 20,
        delay: 0.5,
        onComplete: this.playInstructions,
        onCompleteParams: [this]
      });
    };

    U4A3.prototype.initEvaluation = function(e) {
      var i, _i, _j, _ref, _results;
      U4A3.__super__.initEvaluation.apply(this, arguments);
      for (i = _i = 0, _ref = this.current.length - 1; _i <= _ref; i = _i += 1) {
        this.library[this.current[i].id].addEventListener('click', this.evaluateClick);
      }
      _results = [];
      for (i = _j = 1; _j <= 4; i = _j += 1) {
        _results.push(this.library['w1' + i].addEventListener('click', this.evaluateAnswer1));
      }
      return _results;
    };

    U4A3.prototype.evaluateAnswer1 = function(e) {
      var i, _i, _j, _results;
      this.answer = e.target;
      if (this.answer.index === this.current[this.index].a1) {
        createjs.Sound.play('good');
        this.blink(this.library['group1'], false);
        this.library['wc1'].changeText(this.answer.text.text);
        this.blink(this.library['group2']);
        for (i = _i = 1; _i <= 4; i = _i += 1) {
          this.library['w1' + i].removeEventListener('click', this.evaluateAnswer1);
        }
        _results = [];
        for (i = _j = 1; _j <= 6; i = _j += 1) {
          _results.push(this.library['w2' + i].addEventListener('click', this.evaluateAnswer2));
        }
        return _results;
      } else {
        return this.warning();
      }
    };

    U4A3.prototype.evaluateAnswer2 = function(e) {
      var i, _i, _j, _results;
      this.answer = e.target;
      if (this.answer.index === this.current[this.index].a2) {
        createjs.Sound.play('good');
        this.blink(this.library['group2'], false);
        this.library['wc2'].changeText(this.answer.text.text);
        for (i = _i = 1; _i <= 6; i = _i += 1) {
          this.library['w2' + i].removeEventListener('click', this.evaluateAnswer2);
        }
        if (this.current[this.index].a3) {
          this.blink(this.library['group3']);
          _results = [];
          for (i = _j = 1; _j <= 2; i = _j += 1) {
            _results.push(this.library['w3' + i].addEventListener('click', this.evaluateAnswer3));
          }
          return _results;
        } else {
          return setTimeout(this.finishEvaluation, 1 * 1000);
        }
      } else {
        return this.warning();
      }
    };

    U4A3.prototype.evaluateAnswer3 = function(e) {
      var i, _i;
      this.answer = e.target;
      if (this.answer.index === this.current[this.index].a3) {
        createjs.Sound.play('good');
        this.blink(this.library['group3'], false);
        this.library['wc3'].changeText(this.answer.text.text);
        for (i = _i = 1; _i <= 2; i = _i += 1) {
          this.library['w3' + i].removeEventListener('click', this.evaluateAnswer3);
        }
        return setTimeout(this.finishEvaluation, 1 * 1000);
      } else {
        return this.warning();
      }
    };

    U4A3.prototype.evaluateClick = function(e) {
      if (e.target.name === this.current[this.index].id) {
        createjs.Sound.stop();
        createjs.Sound.play('good');
        this.library['score'].plusOne();
        TweenLite.to(this.library.tickets, 0.5, {
          alpha: 0
        });
        TweenLite.to(this.library.group1, 0.5, {
          alpha: 1,
          delay: 1
        });
        TweenLite.to(this.library.group2, 0.5, {
          alpha: 1,
          delay: 1
        });
        TweenLite.to(this.library.group3, 0.5, {
          alpha: 1,
          delay: 1
        });
        TweenLite.to(this.library.picture, 0.5, {
          alpha: 1,
          delay: 1
        });
        return this.blink(this.library['group1']);
      } else {
        return this.warning();
      }
    };

    U4A3.prototype.finishEvaluation = function() {
      this.library['score'].plusOne();
      TweenLite.to(this.library.group1, 0.5, {
        alpha: 0
      });
      TweenLite.to(this.library.group2, 0.5, {
        alpha: 0
      });
      TweenLite.to(this.library.group3, 0.5, {
        alpha: 0
      });
      TweenLite.to(this.library.picture, 0.5, {
        alpha: 0
      });
      if (this.index < this.current.length - 1) {
        this.index++;
        TweenLite.to(this.library.tickets, 0.5, {
          alpha: 1,
          delay: 1
        });
        return this.setDropper().initEvaluation();
      } else {
        return this.finish();
      }
    };

    U4A3.prototype.finish = function() {
      TweenLite.to(this.library.dropper, 0.5, {
        alpha: 0
      });
      return U4A3.__super__.finish.apply(this, arguments);
    };

    window.U4A3 = U4A3;

    return U4A3;

  })(Oda);

}).call(this);

// Generated by CoffeeScript 1.6.3
(function() {
  var U8A2,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  U8A2 = (function(_super) {
    __extends(U8A2, _super);

    function U8A2() {
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca1.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'playagain',
          src: 'play_again.png'
        }, {
          id: 'startgame',
          src: 'start_game.png'
        }, {
          id: 'btnnext',
          src: 'btn_next.png'
        }, {
          id: 'country',
          src: 'country.png'
        }, {
          id: 'nationality',
          src: 'nationality.png'
        }, {
          id: 'languages',
          src: 'languages.png'
        }, {
          id: 'mapa1',
          src: 'mapa0001.png'
        }, {
          id: 'mapa2',
          src: 'mapa0002.png'
        }, {
          id: 'mapa3',
          src: 'mapa0003.png'
        }, {
          id: 'mapa4',
          src: 'mapa0004.png'
        }, {
          id: 'mapa5',
          src: 'mapa0005.png'
        }, {
          id: 'mapa6',
          src: 'mapa0006.png'
        }, {
          id: 'mapa7',
          src: 'mapa0007.png'
        }, {
          id: 'mapa8',
          src: 'mapa0008.png'
        }, {
          id: 'mapa9',
          src: 'mapa0009.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/good.mp3',
          id: 'good'
        }, {
          src: 'sounds/boing.mp3',
          id: 'boing'
        }, {
          src: 'sounds/TU3_U8_A3_instructions.mp3',
          id: 'instructions'
        }, {
          src: 'sounds/wrong.mp3',
          id: 'wrong'
        }
      ];
      this.game = {
        countries: [
          {
            frase: 'The Inuit people live in the north of this country.',
            pais: 'Canada',
            nacionalidad: 'Canadian',
            idioma: 'English and French'
          }, {
            frase: 'Samba comes from this country.',
            pais: 'Brazil',
            nacionalidad: 'Brazilian',
            idioma: 'Portuguese'
          }, {
            frase: 'This country is famous for sushi.',
            pais: 'Japan',
            nacionalidad: 'Japanese',
            idioma: 'Japanese'
          }, {
            frase: 'This is famous for soccer, tango and beef!',
            pais: 'Argentina',
            nacionalidad: 'Argentinian',
            idioma: 'Spanish'
          }, {
            frase: 'This country is famous for its cheese and chocolate.',
            pais: 'Switzerland',
            nacionalidad: 'Swiss',
            idioma: 'French German Italian Romansh'
          }, {
            frase: '',
            pais: 'Germany',
            nacionalidad: '',
            idioma: ''
          }, {
            frase: 'This country is famous for its champagne and cuisine.',
            pais: 'France',
            nacionalidad: 'French',
            idioma: 'French'
          }, {
            frase: 'This country is also known as the "Emerald Isle."',
            pais: 'Ireland',
            nacionalidad: 'Irish',
            idioma: 'Irish and English'
          }, {
            frase: 'This country is made up of England, Scotland, Wales and North Ireland. ',
            pais: 'United Kingdom',
            nacionalidad: 'British',
            idioma: 'English'
          }, {
            frase: 'This is the most populated country in the world!',
            pais: 'China',
            nacionalidad: 'Chinese',
            idioma: 'Mandarin chinese'
          }, {
            frase: 'This country is famous for its pyramids.',
            pais: 'Egypt',
            nacionalidad: 'Egyptian',
            idioma: 'Arabic'
          }, {
            frase: 'Kangaroos and koalas live in this country.',
            pais: 'Australia',
            nacionalidad: 'Australian',
            idioma: 'English and 70 aboriginal languages'
          }
        ],
        options: [
          {
            country: ['Austria', 'Australia', 'New Zealand'],
            nationality: ['Australian', 'Asian', 'Austrian'],
            languages: ['English', 'Australian', 'English and 70 aboriginal languages']
          }, {
            country: ['Austria', 'Australia', 'New Zealand'],
            nationality: ['Australian', 'Asian', 'Austrian'],
            languages: ['English', 'Australian', 'English and 70 aboriginal languages']
          }
        ]
      };
      U8A2.__super__.constructor.call(this, null, manifest, sounds);
    }

    U8A2.prototype.setStage = function() {
      U8A2.__super__.setStage.apply(this, arguments);
      this.insertBitmap('header', 'head', stageSize.w / 2, 0, 'tc');
      this.insertInstructions('instructions', 'Look, read and click on the correct options.', 40, 100);
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, 10, 0));
      return this.setMapa(1);
    };

    U8A2.prototype.setMapa = function(pais) {
      var btn, c, clang, cnation, cpais, f, i, l, m, mapa, n, word, _i, _j, _k;
      this.country = this.game.countries[pais - 1];
      mapa = new createjs.Container();
      mapa.name = 'mapa';
      m = this.createSprite("map", ['mapa1', 'mapa2', 'mapa3', 'mapa4', 'mapa5', 'mapa6', 'mapa7', 'mapa8', 'mapa9'], null, 60, 150);
      m.currentFrame = pais;
      cpais = new createjs.Container();
      cpais.x = 656;
      cpais.y = 145;
      c = this.createBitmap('country', 'country', 0, 0);
      cpais.addChild(c);
      for (i = _i = 1; _i <= 3; i = ++_i) {
        word = new ClickableText("country" + i, this.game.options[pais - 1].country[i - 1], i, 45, (i * 34) + 2);
        word.text.font = '11px Quicksand';
        word.text.textAlign = 'center';
        cpais.addChild(word);
      }
      cnation = new createjs.Container();
      cnation.x = 656;
      cnation.y = 285;
      n = this.createBitmap('nationality', 'nationality', 0, 0);
      cnation.addChild(n);
      for (i = _j = 1; _j <= 3; i = ++_j) {
        word = new ClickableText("country" + i, this.game.options[pais - 1].nationality[i - 1], i, 45, (i * 34) + 2);
        word.text.font = '11px Quicksand';
        word.text.textAlign = 'center';
        cnation.addChild(word);
      }
      clang = new createjs.Container();
      clang.x = 656;
      clang.y = 425;
      l = this.createBitmap('languages', 'languages', 0, 0);
      clang.addChild(l);
      for (i = _k = 1; _k <= 3; i = ++_k) {
        word = new ClickableText("country" + i, this.game.options[pais - 1].languages[i - 1], i, 45, (i * 34) + 2);
        word.text.font = '11px Quicksand';
        word.text.textAlign = 'center';
        clang.addChild(word);
      }
      btn = this.createBitmap('btnnext', 'btnnext', 400, 552);
      f = new createjs.Text(this.country.frase, '16px Quicksand', '#333333');
      f.x = 100;
      f.y = 510;
      mapa.addChild(m, clang, cnation, cpais, btn, f);
      return this.addToMain(mapa);
    };

    U8A2.prototype.setMenu = function() {
      var i, menu, v, _i, _ref;
      menu = new createjs.Container();
      menu.x = 100;
      menu.y = 290;
      menu.name = 'menu';
      for (i = _i = 0, _ref = this.game.names.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        v = this.createBitmap('drag' + i, 'menu' + this.game.names[i].img, i * 150, 20, 'bc');
        if (i >= 5) {
          v.y = 200;
          v.x = v.x - 670;
        }
        menu.addChild(v);
        this.addToLibrary(v);
      }
      this.addToMain(menu);
      return this;
    };

    U8A2.prototype.setVacations = function(nombre) {
      var b, ballon, btn, char, i, menu, v, _i, _j, _ref, _ref1;
      this.nombre = this.game.names[nombre - 1].img;
      menu = new createjs.Container();
      menu.x = 24;
      menu.y = 140;
      menu.name = 'menu';
      for (i = _i = 0, _ref = this.game.names.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        v = new Draggable('drag' + i, this.preload.getResult('image' + this.game.names[i].img + 'Dragble'), i, i * 85, 0);
        if (i === 0 || i === 8) {
          v.y = 50;
        } else if (i === 1 || i === 7) {
          v.y = 25;
        }
        menu.addChild(v);
        this.addToLibrary(v);
      }
      for (i = _j = 0, _ref1 = this.game.names.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
        b = new Draggable('ballon' + i, this.preload.getResult('ballon' + this.game.names[i].img + 'Dragble'), i, i * 140 + 80, 370);
        if (i >= 5) {
          b.y = 415;
          b.x = b.x - 620;
        }
        menu.addChild(b);
        this.addToLibrary(b);
      }
      char = this.createSprite("character", ["sp" + this.nombre + "Big1", "sp" + this.nombre + "Big2"], null, 180, 340, 'bl');
      btn = this.createBitmap('btnrepeat', 'btnrepeat', 220, 310, 'bl');
      ballon = this.createBitmap('ballon', 'ballon', this.game.names[nombre - 1].x + 10, this.game.names[nombre - 1].y - 112);
      menu.addChild(char, btn, ballon);
      this.addToMain(menu);
      return this;
    };

    window.U8A2 = U8A2;

    return U8A2;

  })(Oda);

}).call(this);

// Generated by CoffeeScript 1.6.3
(function() {
  var U8A6,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  U8A6 = (function(_super) {
    __extends(U8A6, _super);

    function U8A6() {
      this.nextEvaluation = __bind(this.nextEvaluation, this);
      this.finishEvaluation = __bind(this.finishEvaluation, this);
      this.evaluateAnswer = __bind(this.evaluateAnswer, this);
      this.setClick = __bind(this.setClick, this);
      this.initEvaluation = __bind(this.initEvaluation, this);
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca1.png'
        }, {
          id: 'inst',
          src: 'inst.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'repeatbtn',
          src: 'repeat-btn.png'
        }, {
          id: 'playagain',
          src: 'play_again.png'
        }, {
          id: 'startgame',
          src: 'start_game.png'
        }, {
          id: 'youshouldcover',
          src: 'youshouldcover.png'
        }, {
          id: 'youshoulddentist',
          src: 'youshoulddentist.png'
        }, {
          id: 'souvenir',
          src: 'souvenir.png'
        }, {
          id: 'alotofcats',
          src: 'a-lot-of-cats.png'
        }, {
          id: 'anap',
          src: 'a-nap.png'
        }, {
          id: 'itakeanap',
          src: 'i-take-a-nap.png'
        }, {
          id: 'itstheirs',
          src: 'its-theirs.png'
        }, {
          id: 'jointheoutdoorsclub',
          src: 'join-the-outdoors-club.png'
        }, {
          id: 'many',
          src: 'many.png'
        }, {
          id: 'notgoodat',
          src: 'not-good-at.png'
        }, {
          id: 'take',
          src: 'take.png'
        }, {
          id: 'thatahealthyhabit',
          src: 'that-a-healthy-habit.png'
        }, {
          id: 'thatsbadadvice',
          src: 'thats-bad-advice.png'
        }, {
          id: 'thereareafew',
          src: 'there-are-a-few.png'
        }, {
          id: 'twodollarsA',
          src: 'two-dollarsA.png'
        }, {
          id: 'twodollarsB',
          src: 'two-dollarsB.png'
        }, {
          id: 'youshould',
          src: 'you-should.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/good.mp3',
          id: 'good'
        }, {
          src: 'sounds/boing.mp3',
          id: 'boing'
        }, {
          src: 'sounds/TU3_U4_A6_instructions.mp3',
          id: 'instructions'
        }, {
          src: 'sounds/wrong.mp3',
          id: 'wrong'
        }
      ];
      this.game = {
        preguntas: [
          {
            tipo: 'texto',
            imagen: 'notgoodat',
            pregunta: "",
            opcionUno: "He's good at",
            opcionDos: 'not good at taking pictures',
            respuesta: 'opcionDos'
          }, {
            tipo: 'texto',
            imagen: 'alotofcats',
            pregunta: "",
            opcionUno: "There are much",
            opcionDos: 'a lot of cats.',
            respuesta: 'opcionDos'
          }, {
            tipo: 'texto',
            imagen: 'itakeanap',
            pregunta: "When I'm sleepy,",
            opcionUno: "Itake a nap.",
            opcionDos: 'I take a test.',
            respuesta: 'opcionUno'
          }, {
            tipo: 'texto',
            imagen: 'itstheirs',
            regunta: "Whose cat is it?",
            opcionUno: "It's his.",
            opcionDos: "It's theirs.",
            respuesta: 'opcionDos'
          }, {
            tipo: 'texto',
            imagen: 'jointheoutdoorsclub',
            pregunta: "",
            opcionUno: "Join the Crafts Club.",
            opcionDos: 'Join the Outdoors Club.',
            respuesta: 'opcionDos'
          }, {
            tipo: 'texto',
            imagen: 'many',
            pregunta: "There are a lot!",
            opcionUno: "How much",
            opcionDos: 'many watermelons are there?',
            respuesta: 'opcionDos'
          }, {
            tipo: 'texto',
            imagen: 'take',
            pregunta: "",
            opcionUno: "I want to taking",
            opcionDos: 'take violin lessons.',
            respuesta: 'opcionDos'
          }, {
            tipo: 'texto',
            imagen: 'thatahealthyhabit',
            pregunta: "I love driking milk.",
            opcionUno: "That's a healthy habit.",
            opcionDos: "That's an unhealthy habit.",
            respuesta: 'opcionUno'
          }, {
            tipo: 'texto',
            imagen: 'thatsbadadvice',
            pregunta: "",
            opcionUno: "That's a good advice.",
            opcionDos: "That's a bad advice.",
            respuesta: 'opcionDos'
          }, {
            tipo: 'texto',
            imagen: 'thereareafew',
            pregunta: "How many eggs are there?",
            opcionUno: "There are a little.",
            opcionDos: 'There are a few.',
            respuesta: 'opcionDos'
          }, {
            tipo: 'imagen',
            pregunta: "How much are the pears?",
            preguntados: "They're two dollars and thirty cents a kilo.",
            opcionUno: 'twodollarsA',
            opcionDos: 'twodollarsB',
            respuesta: "opcionUno"
          }, {
            tipo: 'texto',
            imagen: 'youshoulddentist',
            pregunta: "You should go to the dentist",
            opcionUno: "twice a month",
            opcionDos: 'twice a year.',
            respuesta: 'opcionDos'
          }, {
            tipo: 'texto',
            imagen: 'youshould',
            pregunta: "I cut my knee.",
            opcionUno: "You should rest.",
            opcionDos: 'You should wash it with soap and water.',
            respuesta: 'opcionDos'
          }, {
            tipo: 'texto',
            imagen: 'youshouldcover',
            pregunta: "You should cover your mouth when you have",
            opcionUno: "chicken pox",
            opcionDos: 'a cough.',
            respuesta: 'opcionDos'
          }, {
            tipo: 'texto',
            imagen: 'souvenirs?',
            pregunta: "Where can I buy souvenirs?",
            opcionUno: "At the movie theater.",
            opcionDos: 'At the gift shop.',
            respuesta: 'opcionDos'
          }
        ]
      };
      U8A6.__super__.constructor.call(this, null, manifest, sounds);
    }

    U8A6.prototype.setStage = function() {
      U8A6.__super__.setStage.apply(this, arguments);
      this.intento = 0;
      this.preguntas = this.shuffleNoRepeat(this.game.preguntas, 11);
      this.insertBitmap('header', 'head', stageSize.w / 2, 0, 'tc');
      this.insertInstructions('instructions', 'Take the review quiz! Click on the correct option.', 40, 100);
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, 10, 0));
      return this.setQuestion(0).introEvaluation();
    };

    U8A6.prototype.setQuestion = function(i) {
      var diagonal, dos, opciones, question, text, total, uno, v;
      question = new createjs.Container();
      question.x = 0;
      question.y = 0;
      question.name = 'question';
      if (this.preguntas[i].tipo === 'texto') {
        v = this.createBitmap(this.preguntas[i].imagen, this.preguntas[i].imagen, stageSize.w / 2, stageSize.h / 2 + 30, 'mc');
        question.addChild(v);
        this.addToLibrary(v);
        text = new createjs.Text(this.preguntas[i].pregunta, '24px Quicksand', '#333');
        text.name = 'titulo';
        text.x = stageSize.w / 2;
        text.y = 140;
        text.textAlign = 'center';
        text.lineWidth = 400;
        question.addChild(text);
        this.addToLibrary(text);
        opciones = new createjs.Container();
        uno = new ClickableText(this.preguntas[i].opcionUno, this.preguntas[i].opcionUno, i, 0, 0);
        uno.text.textAlign = 'center';
        uno.setLineWidth(300);
        uno.x = stageSize.w / 2 - uno.width / 2 - 10;
        opciones.addChild(uno);
        this.addToLibrary(uno);
        diagonal = new createjs.Text('/', '16px Quicksand', '#333');
        diagonal.name = 'diagonal';
        diagonal.textAlign = 'center';
        diagonal.x = stageSize.w / 2;
        diagonal.y = 0;
        opciones.addChild(diagonal);
        this.addToLibrary(diagonal);
        dos = new ClickableText(this.preguntas[i].opcionDos, this.preguntas[i].opcionDos, i, 0, 0);
        dos.text.textAlign = 'center';
        dos.setLineWidth(300);
        dos.x = stageSize.w / 2 + dos.width / 2 + 10;
        opciones.addChild(dos);
        this.addToLibrary(dos);
        total = uno.width + dos.width + 20;
        opciones.y = 490;
        question.addChild(opciones);
      }
      this.addToMain(question);
      return this;
    };

    U8A6.prototype.introEvaluation = function() {
      U8A6.__super__.introEvaluation.apply(this, arguments);
      TweenLite.from(this.library['header'], 1, {
        y: -this.library['header'].height
      });
      TweenLite.from(this.library['instructions'], 1, {
        alpha: 0,
        x: 0,
        delay: 0.5
      });
      return TweenLite.from(this.library['question'], 1, {
        alpha: 0,
        y: this.library['question'].y - 20,
        delay: 1,
        onComplete: this.playInstructions,
        onCompleteParams: [this]
      });
    };

    U8A6.prototype.initEvaluation = function(e) {
      U8A6.__super__.initEvaluation.apply(this, arguments);
      return this.setClick(0);
    };

    U8A6.prototype.setClick = function(i) {
      this.library[this.preguntas[i].opcionUno].index = 'opcionUno';
      this.library[this.preguntas[i].opcionDos].index = 'opcionDos';
      this.library[this.preguntas[i].opcionUno].addEventListener('click', this.evaluateAnswer);
      this.library[this.preguntas[i].opcionDos].addEventListener('click', this.evaluateAnswer);
      return this;
    };

    U8A6.prototype.evaluateAnswer = function(e) {
      this.answer = e.target;
      if (this.answer.index === this.preguntas[this.index].respuesta) {
        createjs.Sound.play('good');
        if (this.intento === 0) {
          this.library['score'].plusOne();
        }
        this.finishEvaluation();
        return this.intento = 0;
      } else {
        this.intento = 1;
        return this.warning();
      }
    };

    U8A6.prototype.finishEvaluation = function() {
      if (this.preguntas[this.index].tipo === 'texto') {
        TweenLite.to(this.library[this.preguntas[this.index].opcionUno], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut
        });
        TweenLite.to(this.library[this.preguntas[this.index].opcionDos], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut
        });
        TweenLite.to(this.library['titulo'], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut
        });
        TweenLite.to(this.library['diagonal'], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut
        });
        return TweenLite.to(this.library[this.preguntas[this.index].imagen], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut,
          onComplete: this.nextEvaluation
        });
      } else if (this.preguntas[this.index].tipo === 'imagen') {
        TweenLite.to(this.library['titulo'], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut,
          onComplete: this.nextEvaluation
        });
        TweenLite.to(this.library[this.preguntas[this.index].opcionDos], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut
        });
        return TweenLite.to(this.library[this.preguntas[this.index].opcionUno], 0.5, {
          alpha: 0,
          y: stageSize.h,
          ease: Back.easeOut
        });
      }
    };

    U8A6.prototype.nextEvaluation = function() {
      this.index++;
      if (this.index < this.preguntas.length - 1) {
        return this.setQuestion(this.index).setClick(this.index);
      } else {
        return this.finish();
      }
    };

    U8A6.prototype.finish = function() {
      return U8A6.__super__.finish.apply(this, arguments);
    };

    window.U8A6 = U8A6;

    return U8A6;

  })(Oda);

}).call(this);

// Generated by CoffeeScript 1.6.3
(function() {
  var U5A3,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  U5A3 = (function(_super) {
    __extends(U5A3, _super);

    function U5A3() {
      this.nextEvaluation = __bind(this.nextEvaluation, this);
      this.finishEvaluation = __bind(this.finishEvaluation, this);
      this.evaluateAnswer = __bind(this.evaluateAnswer, this);
      this.initEvaluation = __bind(this.initEvaluation, this);
      var manifest, sounds;
      manifest = [
        {
          id: 'head',
          src: 'pleca1.png'
        }, {
          id: 'inst',
          src: 'inst.png'
        }, {
          id: 'c1',
          src: 'circle1.png'
        }, {
          id: 'c2',
          src: 'circle2.png'
        }, {
          id: 'repeatbtn',
          src: 'repeat-btn.png'
        }, {
          id: 'playagain',
          src: 'play_again.png'
        }, {
          id: 'startgame',
          src: 'start_game.png'
        }, {
          id: 'propclaw',
          src: 'prop_claw.png'
        }, {
          id: 'propfeather',
          src: 'prop_feather.png'
        }, {
          id: 'propfin',
          src: 'prop_fin.png'
        }, {
          id: 'prophair',
          src: 'prop_hair.png'
        }, {
          id: 'prophead',
          src: 'prop_head.png'
        }, {
          id: 'prophorn',
          src: 'prop_horn.png'
        }, {
          id: 'propleg',
          src: 'prop_leg.png'
        }, {
          id: 'propneck',
          src: 'prop_neck.png'
        }, {
          id: 'proptail',
          src: 'prop_tail.png'
        }, {
          id: 'propteeth',
          src: 'prop_teeth.png'
        }, {
          id: 'proptusk',
          src: 'prop_tusk.png'
        }, {
          id: 'propwing',
          src: 'prop_wing.png'
        }, {
          id: 'propwords',
          src: 'prop_words.png'
        }, {
          id: 'scene2bison',
          src: 'scene2_bison.png'
        }, {
          id: 'scene2mamut',
          src: 'scene2_mamut.png'
        }, {
          id: 'scene2mauisaurus',
          src: 'scene2_mauisaurus.png'
        }, {
          id: 'scene2velociraptor',
          src: 'scene2_velociraptor.png'
        }
      ];
      sounds = [
        {
          src: 'sounds/good.mp3',
          id: 'good'
        }, {
          src: 'sounds/wrong.mp3',
          id: 'wrong'
        }, {
          src: 'sounds/TU2_U5_A3_instructions.mp3',
          id: 'instructions'
        }
      ];
      this.imagenes = [
        {
          txt: 'claw',
          id: 'propclaw'
        }, {
          txt: 'feather',
          id: 'propfeather'
        }, {
          txt: 'fin',
          id: 'propfin'
        }, {
          txt: 'hair',
          id: 'prophair'
        }, {
          txt: 'head',
          id: 'prophead'
        }, {
          txt: 'horn',
          id: 'prophorn'
        }, {
          txt: 'leg',
          id: 'propleg'
        }, {
          txt: 'neck',
          id: 'propneck'
        }, {
          txt: 'tail',
          id: 'proptail'
        }, {
          txt: 'teeth',
          id: 'propteeth'
        }, {
          txt: 'tusk',
          id: 'proptusk'
        }, {
          txt: 'wing',
          id: 'propwing'
        }
      ];
      U5A3.__super__.constructor.call(this, null, manifest, sounds);
    }

    U5A3.prototype.setStage = function() {
      U5A3.__super__.setStage.apply(this, arguments);
      this.success = 1;
      this.preguntas = 0;
      this.insertBitmap('header', 'head', stageSize.w / 2, 0, 'tc');
      this.insertInstructions('instructions', 'Unscramble the seasons, months of the year and holidays.', 40, 100);
      this.addToMain(new Score('score', this.preload.getResult('c1'), this.preload.getResult('c2'), 20, 500, 20, 0));
      return this.setSeasons().introEvaluation();
    };

    U5A3.prototype.setSeasons = function() {
      var i, img, seasons, _i;
      seasons = new createjs.Container();
      seasons.name = 'seasons';
      for (i = _i = 0; _i <= 11; i = ++_i) {
        img = this.createBitmap(this.imagenes[i].id, this.imagenes[i].id, this.imagenes[i].x, this.imagenes[i].y, 'mc');
        img.scaleX = img.scaleY = 0.5;
        this.addToLibrary(img);
        seasons.addChild(img);
      }
      this.addToMain(seasons);
      return this;
    };

    U5A3.prototype.introEvaluation = function() {
      U5A3.__super__.introEvaluation.apply(this, arguments);
      TweenLite.from(this.library['header'], 1, {
        y: -this.library['header'].height
      });
      TweenLite.from(this.library['instructions'], 1, {
        alpha: 0,
        x: 0,
        delay: 0.5
      });
      return TweenLite.from(this.library['seasons'], 0.5, {
        alpha: 0,
        y: this.library['seasons'].y + 20,
        delay: 1,
        onComplete: this.playInstructions,
        onCompleteParams: [this]
      });
    };

    U5A3.prototype.initEvaluation = function(e) {
      U5A3.__super__.initEvaluation.apply(this, arguments);
      this.imagenes = this.shuffle(this.imagenes);
      return this.setQuestion(this.index + this.preguntas);
    };

    U5A3.prototype.setQuestion = function(question) {
      var col, h, i, letra, letras, palabra, wc, _i, _j, _ref, _results;
      _results = [];
      for (h = _i = 1; _i <= 3; h = ++_i) {
        letras = new createjs.Container();
        palabra = new createjs.Container();
        col = this.imagenes[h - 1].txt.split('');
        this.scrambled = this.shuffle(col);
        for (i = _j = 1, _ref = this.scrambled.length; 1 <= _ref ? _j <= _ref : _j >= _ref; i = 1 <= _ref ? ++_j : --_j) {
          if (this.scrambled[i - 1] !== ' ') {
            letra = new DraggableText("" + h + "t" + i, this.scrambled[i - 1], this.scrambled[i - 1], i * 30, 0);
            letra.text.font = '20px Quicksand';
            letra.createHitArea(28, 30);
            letra.addEventListener('drop', this.evaluateAnswer);
            letra.onInitEvaluation();
            this.addToLibrary(letra);
            letras.addChild(letra);
          }
          if (col[i - 1] !== ' ') {
            wc = new WordContainer("" + h + "l" + i, '', 'rgba(238,238,238,0.3)', '	#f39234', i * 42, 50, 40, 30);
            wc.index = col[i - 1];
            this.addToLibrary(wc);
            palabra.addChild(wc);
          }
        }
        palabra.name = "palabra" + h;
        palabra.y = 100 * h;
        palabra.x = stageSize.w / 2 - this.scrambled.length * 42 / 2 - 50;
        this.addToMain(palabra);
        letras.name = "letras" + h;
        letras.y = 100 * h;
        letras.x = stageSize.w / 2 - this.scrambled.length * 30 / 2 - 30;
        _results.push(this.addToMain(letras));
      }
      return _results;
    };

    U5A3.prototype.evaluateAnswer = function(e) {
      var dropped, h, i, pt, _i, _j, _ref;
      this.answer = e.target;
      dropped = false;
      for (h = _i = 1; _i <= 3; h = ++_i) {
        for (i = _j = 1, _ref = this.scrambled.length; 1 <= _ref ? _j <= _ref : _j >= _ref; i = 1 <= _ref ? ++_j : --_j) {
          if (this.library["" + h + "l" + i]) {
            pt = this.library["" + h + "l" + i].globalToLocal(this.stage.mouseX, this.stage.mouseY);
            if (this.library["" + h + "l" + i].hitTest(pt.x, pt.y)) {
              if (this.library["" + h + "l" + i].text.text === '') {
                this.answer.visible = false;
                this.library["" + h + "l" + i].changeText(this.answer.index);
                dropped = true;
              }
            }
          }
        }
      }
      if (!dropped) {
        return this.answer.returnToPlace();
      } else {
        return this.finishEvaluation();
      }
    };

    U5A3.prototype.finishEvaluation = function() {
      var col, h, i, _i, _j, _k, _l, _ref, _ref1, _ref2;
      col = this.imagenes[this.index].txt.split('');
      for (h = _i = 1; _i <= 3; h = ++_i) {
        for (i = _j = 1, _ref = this.scrambled.length; 1 <= _ref ? _j <= _ref : _j >= _ref; i = 1 <= _ref ? ++_j : --_j) {
          if (this.library["" + h + "l" + i]) {
            if (this.library["" + h + "l" + i].text.text === '') {
              return;
            }
          }
        }
        for (i = _k = 1, _ref1 = this.scrambled.length; 1 <= _ref1 ? _k <= _ref1 : _k >= _ref1; i = 1 <= _ref1 ? ++_k : --_k) {
          if (this.library["" + h + "l" + i]) {
            if (this.library["" + h + "l" + i].text.text !== col[i - 1]) {
              this.success = 0;
            }
          }
        }
        if (this.success === 1) {
          createjs.Sound.play('good');
          this.library.score.plusOne();
        } else {
          createjs.Sound.play('wrong');
          this.success = 1;
          console.log("" + h + "l" + i);
          for (i = _l = 1, _ref2 = this.scrambled.length; 1 <= _ref2 ? _l <= _ref2 : _l >= _ref2; i = 1 <= _ref2 ? ++_l : --_l) {
            this.library["" + h + "l" + i].text.text = col[i - 1];
          }
        }
        console.log('yuju');
      }
    };

    U5A3.prototype.nextEvaluation = function() {
      TweenLite.to(this.library[this.imagenes[this.index].img], 1, {
        alpha: 0,
        y: this.library[this.imagenes[this.index].img].y - 20,
        ease: Back.easeOut
      });
      TweenLite.to(this.library.letras, 1, {
        alpha: 0,
        y: this.library["letras" + h].y - 20,
        ease: Back.easeOut
      });
      TweenLite.to(this.library.palabra, 1, {
        alpha: 0,
        y: this.library["palabra" + h].y - 20,
        ease: Back.easeOut
      });
      this.index++;
      if (this.index < this.imagenes.length) {
        return this.setQuestion(this.index);
      } else {
        return this.finish();
      }
    };

    U5A3.prototype.finish = function() {
      return U5A3.__super__.finish.apply(this, arguments);
    };

    window.U5A3 = U5A3;

    return U5A3;

  })(Oda);

}).call(this);
